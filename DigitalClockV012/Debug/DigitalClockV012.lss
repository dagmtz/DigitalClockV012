
DigitalClockV012.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000139e  00001432  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000139e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000055  00800110  00800110  00001442  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001442  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001474  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  000014b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000256c  00000000  00000000  0000176c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d99  00000000  00000000  00003cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001842  00000000  00000000  00004a71  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000974  00000000  00000000  000062b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c14  00000000  00000000  00006c28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000137e  00000000  00000000  0000783c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000298  00000000  00000000  00008bba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <__ctors_end>
       4:	0c 94 af 03 	jmp	0x75e	; 0x75e <__vector_1>
       8:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
       c:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      10:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      14:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      18:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      1c:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      20:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      24:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      28:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      2c:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      30:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      34:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      38:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      3c:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      40:	0c 94 db 03 	jmp	0x7b6	; 0x7b6 <__vector_16>
      44:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      48:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__vector_18>
      4c:	0c 94 56 09 	jmp	0x12ac	; 0x12ac <__vector_19>
      50:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      54:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      58:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      5c:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      60:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>
      64:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__bad_interrupt>

00000068 <__trampolines_end>:
	...
      70:	00 2f       	mov	r16, r16
      72:	00 00       	nop
      74:	00 00       	nop
      76:	07 00       	.word	0x0007	; ????
      78:	07 00       	.word	0x0007	; ????
      7a:	00 14       	cp	r0, r0
      7c:	7f 14       	cp	r7, r15
      7e:	7f 14       	cp	r7, r15
      80:	00 24       	eor	r0, r0
      82:	2a 7f       	andi	r18, 0xFA	; 250
      84:	2a 12       	cpse	r2, r26
      86:	00 62       	ori	r16, 0x20	; 32
      88:	64 08       	sbc	r6, r4
      8a:	13 23       	and	r17, r19
      8c:	00 36       	cpi	r16, 0x60	; 96
      8e:	49 55       	subi	r20, 0x59	; 89
      90:	22 50       	subi	r18, 0x02	; 2
      92:	00 00       	nop
      94:	05 03       	mulsu	r16, r21
      96:	00 00       	nop
      98:	00 00       	nop
      9a:	1c 22       	and	r1, r28
      9c:	41 00       	.word	0x0041	; ????
      9e:	00 00       	nop
      a0:	41 22       	and	r4, r17
      a2:	1c 00       	.word	0x001c	; ????
      a4:	00 14       	cp	r0, r0
      a6:	08 3e       	cpi	r16, 0xE8	; 232
      a8:	08 14       	cp	r0, r8
      aa:	00 08       	sbc	r0, r0
      ac:	08 3e       	cpi	r16, 0xE8	; 232
      ae:	08 08       	sbc	r0, r8
      b0:	00 00       	nop
      b2:	00 a0       	ldd	r0, Z+32	; 0x20
      b4:	60 00       	.word	0x0060	; ????
      b6:	00 08       	sbc	r0, r0
      b8:	08 08       	sbc	r0, r8
      ba:	08 08       	sbc	r0, r8
      bc:	00 00       	nop
      be:	60 60       	ori	r22, 0x00	; 0
      c0:	00 00       	nop
      c2:	00 20       	and	r0, r0
      c4:	10 08       	sbc	r1, r0
      c6:	04 02       	muls	r16, r20
      c8:	00 3e       	cpi	r16, 0xE0	; 224
      ca:	51 49       	sbci	r21, 0x91	; 145
      cc:	45 3e       	cpi	r20, 0xE5	; 229
      ce:	00 00       	nop
      d0:	42 7f       	andi	r20, 0xF2	; 242
      d2:	40 00       	.word	0x0040	; ????
      d4:	00 42       	sbci	r16, 0x20	; 32
      d6:	61 51       	subi	r22, 0x11	; 17
      d8:	49 46       	sbci	r20, 0x69	; 105
      da:	00 21       	and	r16, r0
      dc:	41 45       	sbci	r20, 0x51	; 81
      de:	4b 31       	cpi	r20, 0x1B	; 27
      e0:	00 18       	sub	r0, r0
      e2:	14 12       	cpse	r1, r20
      e4:	7f 10       	cpse	r7, r15
      e6:	00 27       	eor	r16, r16
      e8:	45 45       	sbci	r20, 0x55	; 85
      ea:	45 39       	cpi	r20, 0x95	; 149
      ec:	00 3c       	cpi	r16, 0xC0	; 192
      ee:	4a 49       	sbci	r20, 0x9A	; 154
      f0:	49 30       	cpi	r20, 0x09	; 9
      f2:	00 01       	movw	r0, r0
      f4:	71 09       	sbc	r23, r1
      f6:	05 03       	mulsu	r16, r21
      f8:	00 36       	cpi	r16, 0x60	; 96
      fa:	49 49       	sbci	r20, 0x99	; 153
      fc:	49 36       	cpi	r20, 0x69	; 105
      fe:	00 06       	cpc	r0, r16
     100:	49 49       	sbci	r20, 0x99	; 153
     102:	29 1e       	adc	r2, r25
     104:	00 00       	nop
     106:	36 36       	cpi	r19, 0x66	; 102
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	56 36       	cpi	r21, 0x66	; 102
     10e:	00 00       	nop
     110:	00 08       	sbc	r0, r0
     112:	14 22       	and	r1, r20
     114:	41 00       	.word	0x0041	; ????
     116:	00 14       	cp	r0, r0
     118:	14 14       	cp	r1, r4
     11a:	14 14       	cp	r1, r4
     11c:	00 00       	nop
     11e:	41 22       	and	r4, r17
     120:	14 08       	sbc	r1, r4
     122:	00 02       	muls	r16, r16
     124:	01 51       	subi	r16, 0x11	; 17
     126:	09 06       	cpc	r0, r25
     128:	00 32       	cpi	r16, 0x20	; 32
     12a:	49 59       	subi	r20, 0x99	; 153
     12c:	51 3e       	cpi	r21, 0xE1	; 225
     12e:	00 7c       	andi	r16, 0xC0	; 192
     130:	12 11       	cpse	r17, r2
     132:	12 7c       	andi	r17, 0xC2	; 194
     134:	00 7f       	andi	r16, 0xF0	; 240
     136:	49 49       	sbci	r20, 0x99	; 153
     138:	49 36       	cpi	r20, 0x69	; 105
     13a:	00 3e       	cpi	r16, 0xE0	; 224
     13c:	41 41       	sbci	r20, 0x11	; 17
     13e:	41 22       	and	r4, r17
     140:	00 7f       	andi	r16, 0xF0	; 240
     142:	41 41       	sbci	r20, 0x11	; 17
     144:	22 1c       	adc	r2, r2
     146:	00 7f       	andi	r16, 0xF0	; 240
     148:	49 49       	sbci	r20, 0x99	; 153
     14a:	49 41       	sbci	r20, 0x19	; 25
     14c:	00 7f       	andi	r16, 0xF0	; 240
     14e:	09 09       	sbc	r16, r9
     150:	09 01       	movw	r0, r18
     152:	00 3e       	cpi	r16, 0xE0	; 224
     154:	41 49       	sbci	r20, 0x91	; 145
     156:	49 7a       	andi	r20, 0xA9	; 169
     158:	00 7f       	andi	r16, 0xF0	; 240
     15a:	08 08       	sbc	r0, r8
     15c:	08 7f       	andi	r16, 0xF8	; 248
     15e:	00 00       	nop
     160:	41 7f       	andi	r20, 0xF1	; 241
     162:	41 00       	.word	0x0041	; ????
     164:	00 20       	and	r0, r0
     166:	40 41       	sbci	r20, 0x10	; 16
     168:	3f 01       	movw	r6, r30
     16a:	00 7f       	andi	r16, 0xF0	; 240
     16c:	08 14       	cp	r0, r8
     16e:	22 41       	sbci	r18, 0x12	; 18
     170:	00 7f       	andi	r16, 0xF0	; 240
     172:	40 40       	sbci	r20, 0x00	; 0
     174:	40 40       	sbci	r20, 0x00	; 0
     176:	00 7f       	andi	r16, 0xF0	; 240
     178:	02 0c       	add	r0, r2
     17a:	02 7f       	andi	r16, 0xF2	; 242
     17c:	00 7f       	andi	r16, 0xF0	; 240
     17e:	04 08       	sbc	r0, r4
     180:	10 7f       	andi	r17, 0xF0	; 240
     182:	00 3e       	cpi	r16, 0xE0	; 224
     184:	41 41       	sbci	r20, 0x11	; 17
     186:	41 3e       	cpi	r20, 0xE1	; 225
     188:	00 7f       	andi	r16, 0xF0	; 240
     18a:	09 09       	sbc	r16, r9
     18c:	09 06       	cpc	r0, r25
     18e:	00 3e       	cpi	r16, 0xE0	; 224
     190:	41 51       	subi	r20, 0x11	; 17
     192:	21 5e       	subi	r18, 0xE1	; 225
     194:	00 7f       	andi	r16, 0xF0	; 240
     196:	09 19       	sub	r16, r9
     198:	29 46       	sbci	r18, 0x69	; 105
     19a:	00 46       	sbci	r16, 0x60	; 96
     19c:	49 49       	sbci	r20, 0x99	; 153
     19e:	49 31       	cpi	r20, 0x19	; 25
     1a0:	00 01       	movw	r0, r0
     1a2:	01 7f       	andi	r16, 0xF1	; 241
     1a4:	01 01       	movw	r0, r2
     1a6:	00 3f       	cpi	r16, 0xF0	; 240
     1a8:	40 40       	sbci	r20, 0x00	; 0
     1aa:	40 3f       	cpi	r20, 0xF0	; 240
     1ac:	00 1f       	adc	r16, r16
     1ae:	20 40       	sbci	r18, 0x00	; 0
     1b0:	20 1f       	adc	r18, r16
     1b2:	00 3f       	cpi	r16, 0xF0	; 240
     1b4:	40 38       	cpi	r20, 0x80	; 128
     1b6:	40 3f       	cpi	r20, 0xF0	; 240
     1b8:	00 63       	ori	r16, 0x30	; 48
     1ba:	14 08       	sbc	r1, r4
     1bc:	14 63       	ori	r17, 0x34	; 52
     1be:	00 07       	cpc	r16, r16
     1c0:	08 70       	andi	r16, 0x08	; 8
     1c2:	08 07       	cpc	r16, r24
     1c4:	00 61       	ori	r16, 0x10	; 16
     1c6:	51 49       	sbci	r21, 0x91	; 145
     1c8:	45 43       	sbci	r20, 0x35	; 53
     1ca:	00 00       	nop
     1cc:	7f 41       	sbci	r23, 0x1F	; 31
     1ce:	41 00       	.word	0x0041	; ????
     1d0:	00 55       	subi	r16, 0x50	; 80
     1d2:	2a 55       	subi	r18, 0x5A	; 90
     1d4:	2a 55       	subi	r18, 0x5A	; 90
     1d6:	00 00       	nop
     1d8:	41 41       	sbci	r20, 0x11	; 17
     1da:	7f 00       	.word	0x007f	; ????
     1dc:	00 04       	cpc	r0, r0
     1de:	02 01       	movw	r0, r4
     1e0:	02 04       	cpc	r0, r2
     1e2:	00 40       	sbci	r16, 0x00	; 0
     1e4:	40 40       	sbci	r20, 0x00	; 0
     1e6:	40 40       	sbci	r20, 0x00	; 0
     1e8:	00 00       	nop
     1ea:	01 02       	muls	r16, r17
     1ec:	04 00       	.word	0x0004	; ????
     1ee:	00 20       	and	r0, r0
     1f0:	54 54       	subi	r21, 0x44	; 68
     1f2:	54 78       	andi	r21, 0x84	; 132
     1f4:	00 7f       	andi	r16, 0xF0	; 240
     1f6:	48 44       	sbci	r20, 0x48	; 72
     1f8:	44 38       	cpi	r20, 0x84	; 132
     1fa:	00 38       	cpi	r16, 0x80	; 128
     1fc:	44 44       	sbci	r20, 0x44	; 68
     1fe:	44 20       	and	r4, r4
     200:	00 38       	cpi	r16, 0x80	; 128
     202:	44 44       	sbci	r20, 0x44	; 68
     204:	48 7f       	andi	r20, 0xF8	; 248
     206:	00 38       	cpi	r16, 0x80	; 128
     208:	54 54       	subi	r21, 0x44	; 68
     20a:	54 18       	sub	r5, r4
     20c:	00 08       	sbc	r0, r0
     20e:	7e 09       	sbc	r23, r14
     210:	01 02       	muls	r16, r17
     212:	00 18       	sub	r0, r0
     214:	a4 a4       	ldd	r10, Z+44	; 0x2c
     216:	a4 7c       	andi	r26, 0xC4	; 196
     218:	00 7f       	andi	r16, 0xF0	; 240
     21a:	08 04       	cpc	r0, r8
     21c:	04 78       	andi	r16, 0x84	; 132
     21e:	00 00       	nop
     220:	44 7d       	andi	r20, 0xD4	; 212
     222:	40 00       	.word	0x0040	; ????
     224:	00 40       	sbci	r16, 0x00	; 0
     226:	80 84       	ldd	r8, Z+8	; 0x08
     228:	7d 00       	.word	0x007d	; ????
     22a:	00 7f       	andi	r16, 0xF0	; 240
     22c:	10 28       	or	r1, r0
     22e:	44 00       	.word	0x0044	; ????
     230:	00 00       	nop
     232:	41 7f       	andi	r20, 0xF1	; 241
     234:	40 00       	.word	0x0040	; ????
     236:	00 7c       	andi	r16, 0xC0	; 192
     238:	04 18       	sub	r0, r4
     23a:	04 78       	andi	r16, 0x84	; 132
     23c:	00 7c       	andi	r16, 0xC0	; 192
     23e:	08 04       	cpc	r0, r8
     240:	04 78       	andi	r16, 0x84	; 132
     242:	00 38       	cpi	r16, 0x80	; 128
     244:	44 44       	sbci	r20, 0x44	; 68
     246:	44 38       	cpi	r20, 0x84	; 132
     248:	00 fc       	sbrc	r0, 0
     24a:	24 24       	eor	r2, r4
     24c:	24 18       	sub	r2, r4
     24e:	00 18       	sub	r0, r0
     250:	24 24       	eor	r2, r4
     252:	18 fc       	.word	0xfc18	; ????
     254:	00 7c       	andi	r16, 0xC0	; 192
     256:	08 04       	cpc	r0, r8
     258:	04 08       	sbc	r0, r4
     25a:	00 48       	sbci	r16, 0x80	; 128
     25c:	54 54       	subi	r21, 0x44	; 68
     25e:	54 20       	and	r5, r4
     260:	00 04       	cpc	r0, r0
     262:	3f 44       	sbci	r19, 0x4F	; 79
     264:	40 20       	and	r4, r0
     266:	00 3c       	cpi	r16, 0xC0	; 192
     268:	40 40       	sbci	r20, 0x00	; 0
     26a:	20 7c       	andi	r18, 0xC0	; 192
     26c:	00 1c       	adc	r0, r0
     26e:	20 40       	sbci	r18, 0x00	; 0
     270:	20 1c       	adc	r2, r0
     272:	00 3c       	cpi	r16, 0xC0	; 192
     274:	40 30       	cpi	r20, 0x00	; 0
     276:	40 3c       	cpi	r20, 0xC0	; 192
     278:	00 44       	sbci	r16, 0x40	; 64
     27a:	28 10       	cpse	r2, r8
     27c:	28 44       	sbci	r18, 0x48	; 72
     27e:	00 1c       	adc	r0, r0
     280:	a0 a0       	ldd	r10, Z+32	; 0x20
     282:	a0 7c       	andi	r26, 0xC0	; 192
     284:	00 44       	sbci	r16, 0x40	; 64
     286:	64 54       	subi	r22, 0x44	; 68
     288:	4c 44       	sbci	r20, 0x4C	; 76
     28a:	00 00       	nop
     28c:	08 77       	andi	r16, 0x78	; 120
     28e:	41 00       	.word	0x0041	; ????
     290:	00 00       	nop
     292:	00 63       	ori	r16, 0x30	; 48
     294:	00 00       	nop
     296:	00 00       	nop
     298:	41 77       	andi	r20, 0x71	; 113
     29a:	08 00       	.word	0x0008	; ????
     29c:	00 08       	sbc	r0, r0
     29e:	04 08       	sbc	r0, r4
     2a0:	08 04       	cpc	r0, r8
     2a2:	00 3a       	cpi	r16, 0xA0	; 160
     2a4:	40 40       	sbci	r20, 0x00	; 0
     2a6:	20 7a       	andi	r18, 0xA0	; 160
     2a8:	00 3d       	cpi	r16, 0xD0	; 208
     2aa:	40 40       	sbci	r20, 0x00	; 0
     2ac:	40 3d       	cpi	r20, 0xD0	; 208
     2ae:	00 21       	and	r16, r0
     2b0:	54 54       	subi	r21, 0x44	; 68
     2b2:	54 79       	andi	r21, 0x94	; 148
     2b4:	00 7d       	andi	r16, 0xD0	; 208
     2b6:	12 11       	cpse	r17, r2
     2b8:	12 7d       	andi	r17, 0xD2	; 210
     2ba:	00 39       	cpi	r16, 0x90	; 144
     2bc:	44 44       	sbci	r20, 0x44	; 68
     2be:	44 39       	cpi	r20, 0x94	; 148
     2c0:	00 3d       	cpi	r16, 0xD0	; 208
     2c2:	42 42       	sbci	r20, 0x22	; 34
     2c4:	42 3d       	cpi	r20, 0xD2	; 210
     2c6:	00 02       	muls	r16, r16
     2c8:	05 02       	muls	r16, r21
     2ca:	00 00       	nop
     2cc:	00 7e       	andi	r16, 0xE0	; 224
     2ce:	01 49       	sbci	r16, 0x91	; 145
     2d0:	55 73       	andi	r21, 0x35	; 53
     2d2:	00 7c       	andi	r16, 0xC0	; 192
     2d4:	10 10       	cpse	r1, r0
     2d6:	08 1c       	adc	r0, r8
     2d8:	00 30       	cpi	r16, 0x00	; 0
     2da:	48 20       	and	r4, r8
     2dc:	48 30       	cpi	r20, 0x08	; 8
     2de:	00 5c       	subi	r16, 0xC0	; 192
     2e0:	62 02       	muls	r22, r18
     2e2:	62 5c       	subi	r22, 0xC2	; 194

000002e4 <special_char>:
     2e4:	bc 5f 9c 60 a4 61 84 62 b6 63 96 64 b0 65 9f 66     ._.`.a.b.c.d.e.f
     2f4:	b5 67 89 68 a9 69 ff ff                             .g.h.i..

000002fc <__c.2600>:
     2fc:	1b 5b 32 4a 1b 5b 48 00                             .[2J.[H.

00000304 <__c.2602>:
     304:	1b 5b 31 3b 33 32 6d 55 53 41 52 54 20 52 65 61     .[1;32mUSART Rea
     314:	64 79 0d 0a 00                                      dy...

00000319 <__c.2607>:
     319:	1b 5b 31 3b 33 33 6d 3e 49 6e 69 74 69 61 6c 69     .[1;33m>Initiali
     329:	7a 69 6e 67 20 49 32 43 0d 0a 00                    zing I2C...

00000334 <__c.2609>:
     334:	1b 5b 31 3b 33 33 6d 3e 49 6e 69 74 69 61 6c 69     .[1;33m>Initiali
     344:	7a 69 6e 67 20 4f 4c 45 44 20 44 69 73 70 6c 61     zing OLED Displa
     354:	79 0d 0a 00                                         y...

00000358 <__c.2611>:
     358:	49 6e 69 74 69 61 6c 69 7a 69 6e 67 2e 2e 2e 00     Initializing....

00000368 <__c.2613>:
     368:	1b 5b 31 3b 33 33 6d 3e 49 6e 69 74 69 61 6c 69     .[1;33m>Initiali
     378:	7a 69 6e 67 20 44 53 33 32 33 31 0d 0a 00           zing DS3231...

00000386 <__c.2615>:
     386:	1b 5b 30 6d 00                                      .[0m.

0000038b <init_sequence>:
     38b:	ae 20 00 b0 c8 00 10 40 81 3f a1 a6 a8 3f a4 d3     . .....@.?...?..
     39b:	00 d5 f0 d9 22 da 12 db 20 8d 14                    ...."... ..

000003a6 <__ctors_end>:
     3a6:	11 24       	eor	r1, r1
     3a8:	1f be       	out	0x3f, r1	; 63
     3aa:	cf ef       	ldi	r28, 0xFF	; 255
     3ac:	d8 e0       	ldi	r29, 0x08	; 8
     3ae:	de bf       	out	0x3e, r29	; 62
     3b0:	cd bf       	out	0x3d, r28	; 61

000003b2 <__do_copy_data>:
     3b2:	11 e0       	ldi	r17, 0x01	; 1
     3b4:	a0 e0       	ldi	r26, 0x00	; 0
     3b6:	b1 e0       	ldi	r27, 0x01	; 1
     3b8:	ee e9       	ldi	r30, 0x9E	; 158
     3ba:	f3 e1       	ldi	r31, 0x13	; 19
     3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <__do_copy_data+0x10>
     3be:	05 90       	lpm	r0, Z+
     3c0:	0d 92       	st	X+, r0
     3c2:	a0 31       	cpi	r26, 0x10	; 16
     3c4:	b1 07       	cpc	r27, r17
     3c6:	d9 f7       	brne	.-10     	; 0x3be <__do_copy_data+0xc>

000003c8 <__do_clear_bss>:
     3c8:	21 e0       	ldi	r18, 0x01	; 1
     3ca:	a0 e1       	ldi	r26, 0x10	; 16
     3cc:	b1 e0       	ldi	r27, 0x01	; 1
     3ce:	01 c0       	rjmp	.+2      	; 0x3d2 <.do_clear_bss_start>

000003d0 <.do_clear_bss_loop>:
     3d0:	1d 92       	st	X+, r1

000003d2 <.do_clear_bss_start>:
     3d2:	a5 36       	cpi	r26, 0x65	; 101
     3d4:	b2 07       	cpc	r27, r18
     3d6:	e1 f7       	brne	.-8      	; 0x3d0 <.do_clear_bss_loop>
     3d8:	0e 94 10 03 	call	0x620	; 0x620 <main>
     3dc:	0c 94 cd 09 	jmp	0x139a	; 0x139a <_exit>

000003e0 <__bad_interrupt>:
     3e0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003e4 <addressInc>:
  bitfield8_t buffer = {0};
  buffer.byte = DS3231_getByte( DS3231_MONTH );
  
  /* 0 = XXI, 1 = XXII */
  return buffer.bits.b7;
}
     3e4:	cf 93       	push	r28
     3e6:	df 93       	push	r29
     3e8:	cd b7       	in	r28, 0x3d	; 61
     3ea:	de b7       	in	r29, 0x3e	; 62
     3ec:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
     3f0:	8f 5f       	subi	r24, 0xFF	; 255
     3f2:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
     3f6:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
     3fa:	82 31       	cpi	r24, 0x12	; 18
     3fc:	10 f0       	brcs	.+4      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
     3fe:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
     402:	00 00       	nop
     404:	df 91       	pop	r29
     406:	cf 91       	pop	r28
     408:	08 95       	ret

0000040a <DS3231_getByte>:
 *  @brief   
 *  @param   
 *  @return  none
 */
uint8_t DS3231_getByte( uint8_t byteToGet )
{
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
     40e:	00 d0       	rcall	.+0      	; 0x410 <DS3231_getByte+0x6>
     410:	cd b7       	in	r28, 0x3d	; 61
     412:	de b7       	in	r29, 0x3e	; 62
     414:	8a 83       	std	Y+2, r24	; 0x02
  uint8_t buffer = 0;
     416:	19 82       	std	Y+1, r1	; 0x01
  
  if( addressPtr != byteToGet )
     418:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <__data_end>
     41c:	8a 81       	ldd	r24, Y+2	; 0x02
     41e:	98 17       	cp	r25, r24
     420:	61 f0       	breq	.+24     	; 0x43a <DS3231_getByte+0x30>
  {
    addressPtr = byteToGet;
     422:	8a 81       	ldd	r24, Y+2	; 0x02
     424:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
    /* Set DS3231 Address Pointer to the desired address */
    i2c_start_sla( TW_SLA_W( DS3231_ADDRESS ) );
     428:	80 ed       	ldi	r24, 0xD0	; 208
     42a:	0e 94 44 02 	call	0x488	; 0x488 <i2c_start_sla>
    i2c_write( byteToGet );
     42e:	8a 81       	ldd	r24, Y+2	; 0x02
     430:	0e 94 a9 02 	call	0x552	; 0x552 <i2c_write>
    i2c_stop();
     434:	0e 94 9c 02 	call	0x538	; 0x538 <i2c_stop>
     438:	08 c0       	rjmp	.+16     	; 0x44a <DS3231_getByte+0x40>
  }
  else
  {
    /* Request one byte and send NACK to end transmission */
    i2c_start_sla( TW_SLA_R( DS3231_ADDRESS ) );
     43a:	81 ed       	ldi	r24, 0xD1	; 209
     43c:	0e 94 44 02 	call	0x488	; 0x488 <i2c_start_sla>
    buffer = i2c_readNAck();
     440:	0e 94 de 02 	call	0x5bc	; 0x5bc <i2c_readNAck>
     444:	89 83       	std	Y+1, r24	; 0x01
    i2c_stop();
     446:	0e 94 9c 02 	call	0x538	; 0x538 <i2c_stop>
  }
  
  addressInc();
     44a:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <addressInc>
  return buffer;
     44e:	89 81       	ldd	r24, Y+1	; 0x01
}
     450:	0f 90       	pop	r0
     452:	0f 90       	pop	r0
     454:	df 91       	pop	r29
     456:	cf 91       	pop	r28
     458:	08 95       	ret

0000045a <i2c_init>:
			I2C_ErrorCode |= (1 << I2C_READACK);
			return 0;
		}
	};
    return TWDR;
}
     45a:	cf 93       	push	r28
     45c:	df 93       	push	r29
     45e:	cd b7       	in	r28, 0x3d	; 61
     460:	de b7       	in	r29, 0x3e	; 62
     462:	89 eb       	ldi	r24, 0xB9	; 185
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	fc 01       	movw	r30, r24
     468:	10 82       	st	Z, r1
     46a:	00 00       	nop
     46c:	88 eb       	ldi	r24, 0xB8	; 184
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	28 e4       	ldi	r18, 0x48	; 72
     472:	fc 01       	movw	r30, r24
     474:	20 83       	st	Z, r18
     476:	8c eb       	ldi	r24, 0xBC	; 188
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	24 e0       	ldi	r18, 0x04	; 4
     47c:	fc 01       	movw	r30, r24
     47e:	20 83       	st	Z, r18
     480:	00 00       	nop
     482:	df 91       	pop	r29
     484:	cf 91       	pop	r28
     486:	08 95       	ret

00000488 <i2c_start_sla>:
     488:	cf 93       	push	r28
     48a:	df 93       	push	r29
     48c:	00 d0       	rcall	.+0      	; 0x48e <i2c_start_sla+0x6>
     48e:	1f 92       	push	r1
     490:	cd b7       	in	r28, 0x3d	; 61
     492:	de b7       	in	r29, 0x3e	; 62
     494:	8b 83       	std	Y+3, r24	; 0x03
     496:	8c eb       	ldi	r24, 0xBC	; 188
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	24 ea       	ldi	r18, 0xA4	; 164
     49c:	fc 01       	movw	r30, r24
     49e:	20 83       	st	Z, r18
     4a0:	80 e4       	ldi	r24, 0x40	; 64
     4a2:	91 e0       	ldi	r25, 0x01	; 1
     4a4:	9a 83       	std	Y+2, r25	; 0x02
     4a6:	89 83       	std	Y+1, r24	; 0x01
     4a8:	0f c0       	rjmp	.+30     	; 0x4c8 <i2c_start_sla+0x40>
     4aa:	89 81       	ldd	r24, Y+1	; 0x01
     4ac:	9a 81       	ldd	r25, Y+2	; 0x02
     4ae:	01 97       	sbiw	r24, 0x01	; 1
     4b0:	9a 83       	std	Y+2, r25	; 0x02
     4b2:	89 83       	std	Y+1, r24	; 0x01
     4b4:	89 81       	ldd	r24, Y+1	; 0x01
     4b6:	9a 81       	ldd	r25, Y+2	; 0x02
     4b8:	89 2b       	or	r24, r25
     4ba:	31 f4       	brne	.+12     	; 0x4c8 <i2c_start_sla+0x40>
     4bc:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_ErrorCode>
     4c0:	81 60       	ori	r24, 0x01	; 1
     4c2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <I2C_ErrorCode>
     4c6:	32 c0       	rjmp	.+100    	; 0x52c <i2c_start_sla+0xa4>
     4c8:	8c eb       	ldi	r24, 0xBC	; 188
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	fc 01       	movw	r30, r24
     4ce:	80 81       	ld	r24, Z
     4d0:	88 23       	and	r24, r24
     4d2:	24 f0       	brlt	.+8      	; 0x4dc <i2c_start_sla+0x54>
     4d4:	89 81       	ldd	r24, Y+1	; 0x01
     4d6:	9a 81       	ldd	r25, Y+2	; 0x02
     4d8:	89 2b       	or	r24, r25
     4da:	39 f7       	brne	.-50     	; 0x4aa <i2c_start_sla+0x22>
     4dc:	8b eb       	ldi	r24, 0xBB	; 187
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	2b 81       	ldd	r18, Y+3	; 0x03
     4e2:	fc 01       	movw	r30, r24
     4e4:	20 83       	st	Z, r18
     4e6:	8c eb       	ldi	r24, 0xBC	; 188
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	24 e8       	ldi	r18, 0x84	; 132
     4ec:	fc 01       	movw	r30, r24
     4ee:	20 83       	st	Z, r18
     4f0:	80 e4       	ldi	r24, 0x40	; 64
     4f2:	91 e0       	ldi	r25, 0x01	; 1
     4f4:	9a 83       	std	Y+2, r25	; 0x02
     4f6:	89 83       	std	Y+1, r24	; 0x01
     4f8:	0f c0       	rjmp	.+30     	; 0x518 <i2c_start_sla+0x90>
     4fa:	89 81       	ldd	r24, Y+1	; 0x01
     4fc:	9a 81       	ldd	r25, Y+2	; 0x02
     4fe:	01 97       	sbiw	r24, 0x01	; 1
     500:	9a 83       	std	Y+2, r25	; 0x02
     502:	89 83       	std	Y+1, r24	; 0x01
     504:	89 81       	ldd	r24, Y+1	; 0x01
     506:	9a 81       	ldd	r25, Y+2	; 0x02
     508:	89 2b       	or	r24, r25
     50a:	31 f4       	brne	.+12     	; 0x518 <i2c_start_sla+0x90>
     50c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_ErrorCode>
     510:	82 60       	ori	r24, 0x02	; 2
     512:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <I2C_ErrorCode>
     516:	0a c0       	rjmp	.+20     	; 0x52c <i2c_start_sla+0xa4>
     518:	8c eb       	ldi	r24, 0xBC	; 188
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	fc 01       	movw	r30, r24
     51e:	80 81       	ld	r24, Z
     520:	88 23       	and	r24, r24
     522:	24 f0       	brlt	.+8      	; 0x52c <i2c_start_sla+0xa4>
     524:	89 81       	ldd	r24, Y+1	; 0x01
     526:	9a 81       	ldd	r25, Y+2	; 0x02
     528:	89 2b       	or	r24, r25
     52a:	39 f7       	brne	.-50     	; 0x4fa <i2c_start_sla+0x72>
     52c:	0f 90       	pop	r0
     52e:	0f 90       	pop	r0
     530:	0f 90       	pop	r0
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	08 95       	ret

00000538 <i2c_stop>:
     538:	cf 93       	push	r28
     53a:	df 93       	push	r29
     53c:	cd b7       	in	r28, 0x3d	; 61
     53e:	de b7       	in	r29, 0x3e	; 62
     540:	8c eb       	ldi	r24, 0xBC	; 188
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	24 e9       	ldi	r18, 0x94	; 148
     546:	fc 01       	movw	r30, r24
     548:	20 83       	st	Z, r18
     54a:	00 00       	nop
     54c:	df 91       	pop	r29
     54e:	cf 91       	pop	r28
     550:	08 95       	ret

00000552 <i2c_write>:
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	00 d0       	rcall	.+0      	; 0x558 <i2c_write+0x6>
     558:	1f 92       	push	r1
     55a:	cd b7       	in	r28, 0x3d	; 61
     55c:	de b7       	in	r29, 0x3e	; 62
     55e:	8b 83       	std	Y+3, r24	; 0x03
     560:	8b eb       	ldi	r24, 0xBB	; 187
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	2b 81       	ldd	r18, Y+3	; 0x03
     566:	fc 01       	movw	r30, r24
     568:	20 83       	st	Z, r18
     56a:	8c eb       	ldi	r24, 0xBC	; 188
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	24 e8       	ldi	r18, 0x84	; 132
     570:	fc 01       	movw	r30, r24
     572:	20 83       	st	Z, r18
     574:	80 e4       	ldi	r24, 0x40	; 64
     576:	91 e0       	ldi	r25, 0x01	; 1
     578:	9a 83       	std	Y+2, r25	; 0x02
     57a:	89 83       	std	Y+1, r24	; 0x01
     57c:	0f c0       	rjmp	.+30     	; 0x59c <i2c_write+0x4a>
     57e:	89 81       	ldd	r24, Y+1	; 0x01
     580:	9a 81       	ldd	r25, Y+2	; 0x02
     582:	01 97       	sbiw	r24, 0x01	; 1
     584:	9a 83       	std	Y+2, r25	; 0x02
     586:	89 83       	std	Y+1, r24	; 0x01
     588:	89 81       	ldd	r24, Y+1	; 0x01
     58a:	9a 81       	ldd	r25, Y+2	; 0x02
     58c:	89 2b       	or	r24, r25
     58e:	31 f4       	brne	.+12     	; 0x59c <i2c_write+0x4a>
     590:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_ErrorCode>
     594:	84 60       	ori	r24, 0x04	; 4
     596:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <I2C_ErrorCode>
     59a:	0a c0       	rjmp	.+20     	; 0x5b0 <i2c_write+0x5e>
     59c:	8c eb       	ldi	r24, 0xBC	; 188
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	fc 01       	movw	r30, r24
     5a2:	80 81       	ld	r24, Z
     5a4:	88 23       	and	r24, r24
     5a6:	24 f0       	brlt	.+8      	; 0x5b0 <i2c_write+0x5e>
     5a8:	89 81       	ldd	r24, Y+1	; 0x01
     5aa:	9a 81       	ldd	r25, Y+2	; 0x02
     5ac:	89 2b       	or	r24, r25
     5ae:	39 f7       	brne	.-50     	; 0x57e <i2c_write+0x2c>
     5b0:	0f 90       	pop	r0
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	df 91       	pop	r29
     5b8:	cf 91       	pop	r28
     5ba:	08 95       	ret

000005bc <i2c_readNAck>:
 
 Return Value: uint8_t
  - TWDR: recieved value at TWI/I2C-Interface
  - 0:    Error at read
 **********************************************/
uint8_t i2c_readNAck(void){
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	00 d0       	rcall	.+0      	; 0x5c2 <i2c_readNAck+0x6>
     5c2:	cd b7       	in	r28, 0x3d	; 61
     5c4:	de b7       	in	r29, 0x3e	; 62
    TWCR = (1<<TWINT)|(1<<TWEN);
     5c6:	8c eb       	ldi	r24, 0xBC	; 188
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	24 e8       	ldi	r18, 0x84	; 132
     5cc:	fc 01       	movw	r30, r24
     5ce:	20 83       	st	Z, r18
    uint16_t timeout = F_CPU/F_I2C*2.0;
     5d0:	80 e4       	ldi	r24, 0x40	; 64
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	9a 83       	std	Y+2, r25	; 0x02
     5d6:	89 83       	std	Y+1, r24	; 0x01
    while((TWCR & (1 << TWINT)) == 0 &&
     5d8:	10 c0       	rjmp	.+32     	; 0x5fa <i2c_readNAck+0x3e>
		  timeout !=0){
		timeout--;
     5da:	89 81       	ldd	r24, Y+1	; 0x01
     5dc:	9a 81       	ldd	r25, Y+2	; 0x02
     5de:	01 97       	sbiw	r24, 0x01	; 1
     5e0:	9a 83       	std	Y+2, r25	; 0x02
     5e2:	89 83       	std	Y+1, r24	; 0x01
		if(timeout == 0){
     5e4:	89 81       	ldd	r24, Y+1	; 0x01
     5e6:	9a 81       	ldd	r25, Y+2	; 0x02
     5e8:	89 2b       	or	r24, r25
     5ea:	39 f4       	brne	.+14     	; 0x5fa <i2c_readNAck+0x3e>
			I2C_ErrorCode |= (1 << I2C_READNACK);
     5ec:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_ErrorCode>
     5f0:	80 61       	ori	r24, 0x10	; 16
     5f2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <I2C_ErrorCode>
            return 0;
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	0e c0       	rjmp	.+28     	; 0x616 <i2c_readNAck+0x5a>
  - 0:    Error at read
 **********************************************/
uint8_t i2c_readNAck(void){
    TWCR = (1<<TWINT)|(1<<TWEN);
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     5fa:	8c eb       	ldi	r24, 0xBC	; 188
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	fc 01       	movw	r30, r24
     600:	80 81       	ld	r24, Z
     602:	88 23       	and	r24, r24
     604:	24 f0       	brlt	.+8      	; 0x60e <i2c_readNAck+0x52>
     606:	89 81       	ldd	r24, Y+1	; 0x01
     608:	9a 81       	ldd	r25, Y+2	; 0x02
     60a:	89 2b       	or	r24, r25
     60c:	31 f7       	brne	.-52     	; 0x5da <i2c_readNAck+0x1e>
		if(timeout == 0){
			I2C_ErrorCode |= (1 << I2C_READNACK);
            return 0;
		}
	};
    return TWDR;
     60e:	8b eb       	ldi	r24, 0xBB	; 187
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	fc 01       	movw	r30, r24
     614:	80 81       	ld	r24, Z
}
     616:	0f 90       	pop	r0
     618:	0f 90       	pop	r0
     61a:	df 91       	pop	r29
     61c:	cf 91       	pop	r28
     61e:	08 95       	ret

00000620 <main>:
volatile uint16_t g_msCounter3 = 0;

clock_control_t *gp_clockCtrl;

int main(void)
{	
     620:	cf 93       	push	r28
     622:	df 93       	push	r29
     624:	00 d0       	rcall	.+0      	; 0x626 <main+0x6>
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
	/* <<<<<<<<<< SETUP >>>>>>>>>> */

	/* Set up external interrupt ( 1Hz from RTC ) */
	DDRD &= _BV( PORTD2 );
     62a:	8a e2       	ldi	r24, 0x2A	; 42
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	2a e2       	ldi	r18, 0x2A	; 42
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	f9 01       	movw	r30, r18
     634:	20 81       	ld	r18, Z
     636:	24 70       	andi	r18, 0x04	; 4
     638:	fc 01       	movw	r30, r24
     63a:	20 83       	st	Z, r18
	EICRA = ( _BV( ISC01 ) | _BV( ISC00 ) );
     63c:	89 e6       	ldi	r24, 0x69	; 105
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	23 e0       	ldi	r18, 0x03	; 3
     642:	fc 01       	movw	r30, r24
     644:	20 83       	st	Z, r18
	
	/* Set up Timer/Counter 0 in normal mode with prescaler 64 */
	TCCR0A = 0;
     646:	84 e4       	ldi	r24, 0x44	; 68
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	fc 01       	movw	r30, r24
     64c:	10 82       	st	Z, r1
	TCCR0B = ( _BV( CS00 ) | _BV( CS01 ) );
     64e:	85 e4       	ldi	r24, 0x45	; 69
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	23 e0       	ldi	r18, 0x03	; 3
     654:	fc 01       	movw	r30, r24
     656:	20 83       	st	Z, r18

	/* Enable INT0 external interrupt */
	EIMSK = _BV( INT0 );
     658:	8d e3       	ldi	r24, 0x3D	; 61
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	21 e0       	ldi	r18, 0x01	; 1
     65e:	fc 01       	movw	r30, r24
     660:	20 83       	st	Z, r18
	
	/* Enable Timer/Counter 0 Overflow interrupt */
	TIMSK0 = _BV( TOIE0 );
     662:	8e e6       	ldi	r24, 0x6E	; 110
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	21 e0       	ldi	r18, 0x01	; 1
     668:	fc 01       	movw	r30, r24
     66a:	20 83       	st	Z, r18
	
	DDRB |= _BV( PORTB5 );
     66c:	84 e2       	ldi	r24, 0x24	; 36
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	24 e2       	ldi	r18, 0x24	; 36
     672:	30 e0       	ldi	r19, 0x00	; 0
     674:	f9 01       	movw	r30, r18
     676:	20 81       	ld	r18, Z
     678:	20 62       	ori	r18, 0x20	; 32
     67a:	fc 01       	movw	r30, r24
     67c:	20 83       	st	Z, r18
     67e:	88 e0       	ldi	r24, 0x08	; 8
     680:	90 e0       	ldi	r25, 0x00	; 0
     682:	9a 83       	std	Y+2, r25	; 0x02
     684:	89 83       	std	Y+1, r24	; 0x01
	{
	#ifdef USART0_RS485_MODE
		RS485_CONTROL0_DDR |= (1<<RS485_CONTROL0_IONUM); // default pin state is low
	#endif
		
		UBRR0L_REGISTER = (uint8_t) ubrr_value;
     686:	84 ec       	ldi	r24, 0xC4	; 196
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	29 81       	ldd	r18, Y+1	; 0x01
     68c:	fc 01       	movw	r30, r24
     68e:	20 83       	st	Z, r18
		
	#ifdef USART_SKIP_UBRRH_IF_ZERO
		if(__builtin_constant_p(ubrr_value))
			if(((ubrr_value>>8) != 0)) // requires -Os flag - do not use in non-inline functions
	#endif
			UBRR0H_REGISTER = (ubrr_value>>8);
     690:	85 ec       	ldi	r24, 0xC5	; 197
     692:	90 e0       	ldi	r25, 0x00	; 0
     694:	29 81       	ldd	r18, Y+1	; 0x01
     696:	3a 81       	ldd	r19, Y+2	; 0x02
     698:	23 2f       	mov	r18, r19
     69a:	33 27       	eor	r19, r19
     69c:	fc 01       	movw	r30, r24
     69e:	20 83       	st	Z, r18
		#endif
	#elif defined(USART0_MPCM_MODE)
		UCSR0A_REGISTER |= (1<<MPCM0_BIT);
	#endif
		
		UCSR0B_REGISTER = USART0_CONFIG_B;
     6a0:	81 ec       	ldi	r24, 0xC1	; 193
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	28 e9       	ldi	r18, 0x98	; 152
     6a6:	fc 01       	movw	r30, r24
     6a8:	20 83       	st	Z, r18

#ifdef USART_DEBUG
	/*** SET UP USART ***/
	uart_init( BAUD_CALC( 115200 ) ); // 8n1 transmission is set as default
	
	stdout = &uart0_io; // attach uart stream to stdout & stdin
     6aa:	81 e0       	ldi	r24, 0x01	; 1
     6ac:	91 e0       	ldi	r25, 0x01	; 1
     6ae:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <__iob+0x3>
     6b2:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__iob+0x2>
	stdin = &uart0_io; // uart0_in and uart0_out are only available if NO_USART_RX or NO_USART_TX is defined
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	91 e0       	ldi	r25, 0x01	; 1
     6ba:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <__iob+0x1>
     6be:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <__iob>
	
	// char usartBuffer[BUFF_SIZE];
#endif /* USART_DEBUG */

	sei();
     6c2:	78 94       	sei
	
#ifdef USART_DEBUG
	uart_puts_P( "\x1b[2J\x1b[H" );
     6c4:	8c ef       	ldi	r24, 0xFC	; 252
     6c6:	92 e0       	ldi	r25, 0x02	; 2
     6c8:	0e 94 b0 08 	call	0x1160	; 0x1160 <uart0_puts_p>
	uart_puts_P( "\x1b[1;32mUSART Ready\r\n" );
     6cc:	84 e0       	ldi	r24, 0x04	; 4
     6ce:	93 e0       	ldi	r25, 0x03	; 3
     6d0:	0e 94 b0 08 	call	0x1160	; 0x1160 <uart0_puts_p>
#endif /* USART_DEBUG */
	
	g_msCounter2 = 0;
     6d4:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <g_msCounter2+0x1>
     6d8:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <g_msCounter2>
	while( g_msCounter2 < 100 );
     6dc:	00 00       	nop
     6de:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <g_msCounter2>
     6e2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <g_msCounter2+0x1>
     6e6:	84 36       	cpi	r24, 0x64	; 100
     6e8:	91 05       	cpc	r25, r1
     6ea:	c8 f3       	brcs	.-14     	; 0x6de <main+0xbe>
	
	/*** SET UP I2C ***/
#ifdef USART_DEBUG
	uart_puts_P( "\x1b[1;33m>Initializing I2C\r\n" );
     6ec:	89 e1       	ldi	r24, 0x19	; 25
     6ee:	93 e0       	ldi	r25, 0x03	; 3
     6f0:	0e 94 b0 08 	call	0x1160	; 0x1160 <uart0_puts_p>
#endif /* USART_DEBUG */
	i2c_init();
     6f4:	0e 94 2d 02 	call	0x45a	; 0x45a <i2c_init>
	
	///*** SET UP OLED ***/
#ifdef USART_DEBUG
	uart_puts_P( "\x1b[1;33m>Initializing OLED Display\r\n" );
     6f8:	84 e3       	ldi	r24, 0x34	; 52
     6fa:	93 e0       	ldi	r25, 0x03	; 3
     6fc:	0e 94 b0 08 	call	0x1160	; 0x1160 <uart0_puts_p>
#endif /* USART_DEBUG */

	oled_init( LCD_DISP_ON ); // init lcd and turn on
     700:	8f ea       	ldi	r24, 0xAF	; 175
     702:	0e 94 70 04 	call	0x8e0	; 0x8e0 <oled_init>
	oled_puts_p( PSTR( "Initializing..." ) );
     706:	88 e5       	ldi	r24, 0x58	; 88
     708:	93 e0       	ldi	r25, 0x03	; 3
     70a:	0e 94 0b 08 	call	0x1016	; 0x1016 <oled_puts_p>
	
#ifdef USART_DEBUG
	uart_puts_P( "\x1b[1;33m>Initializing DS3231\r\n" );
     70e:	88 e6       	ldi	r24, 0x68	; 104
     710:	93 e0       	ldi	r25, 0x03	; 3
     712:	0e 94 b0 08 	call	0x1160	; 0x1160 <uart0_puts_p>
#endif /* USART_DEBUG */
	
	 i2c_start_sla( TW_SLA_W( DS3231_ADDRESS ) );
     716:	80 ed       	ldi	r24, 0xD0	; 208
     718:	0e 94 44 02 	call	0x488	; 0x488 <i2c_start_sla>
	 i2c_write( DS3231_CONTROL );
     71c:	8e e0       	ldi	r24, 0x0E	; 14
     71e:	0e 94 a9 02 	call	0x552	; 0x552 <i2c_write>
	 
	 /* Set the desired value to the address set */
	 i2c_write( 0 );
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	0e 94 a9 02 	call	0x552	; 0x552 <i2c_write>
	 i2c_stop();
     728:	0e 94 9c 02 	call	0x538	; 0x538 <i2c_stop>
	 
	uart_putuint( DS3231_getByte( DS3231_CONTROL ) );
     72c:	8e e0       	ldi	r24, 0x0E	; 14
     72e:	0e 94 05 02 	call	0x40a	; 0x40a <DS3231_getByte>
     732:	88 2f       	mov	r24, r24
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	0e 94 ce 08 	call	0x119c	; 0x119c <uart0_putuint>
	
	
	#ifdef USART_DEBUG
	uart_puts_P( "\x1b[0m" );
     73a:	86 e8       	ldi	r24, 0x86	; 134
     73c:	93 e0       	ldi	r25, 0x03	; 3
     73e:	0e 94 b0 08 	call	0x1160	; 0x1160 <uart0_puts_p>
	#endif /* USART_DEBUG */
	
	while (1)
	{
		if ( g_heartbeat_1s )
     742:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <g_heartbeat_1s>
     746:	88 23       	and	r24, r24
     748:	e1 f3       	breq	.-8      	; 0x742 <main+0x122>
		{
			g_heartbeat_1s = false;
     74a:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <g_heartbeat_1s>
			uart_putuint( DS3231_getByte( DS3231_SECONDS ) );
     74e:	80 e0       	ldi	r24, 0x00	; 0
     750:	0e 94 05 02 	call	0x40a	; 0x40a <DS3231_getByte>
     754:	88 2f       	mov	r24, r24
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	0e 94 ce 08 	call	0x119c	; 0x119c <uart0_putuint>
		}
	}
     75c:	f2 cf       	rjmp	.-28     	; 0x742 <main+0x122>

0000075e <__vector_1>:
	
}

ISR( INT0_vect )
{
     75e:	1f 92       	push	r1
     760:	0f 92       	push	r0
     762:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     766:	0f 92       	push	r0
     768:	11 24       	eor	r1, r1
     76a:	2f 93       	push	r18
     76c:	3f 93       	push	r19
     76e:	8f 93       	push	r24
     770:	9f 93       	push	r25
     772:	ef 93       	push	r30
     774:	ff 93       	push	r31
     776:	cf 93       	push	r28
     778:	df 93       	push	r29
     77a:	cd b7       	in	r28, 0x3d	; 61
     77c:	de b7       	in	r29, 0x3e	; 62
	g_heartbeat_1s = true;
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <g_heartbeat_1s>
	PORTB ^= _BV( PORTB5 );	
     784:	85 e2       	ldi	r24, 0x25	; 37
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	25 e2       	ldi	r18, 0x25	; 37
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	f9 01       	movw	r30, r18
     78e:	30 81       	ld	r19, Z
     790:	20 e2       	ldi	r18, 0x20	; 32
     792:	23 27       	eor	r18, r19
     794:	fc 01       	movw	r30, r24
     796:	20 83       	st	Z, r18
}
     798:	00 00       	nop
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	ff 91       	pop	r31
     7a0:	ef 91       	pop	r30
     7a2:	9f 91       	pop	r25
     7a4:	8f 91       	pop	r24
     7a6:	3f 91       	pop	r19
     7a8:	2f 91       	pop	r18
     7aa:	0f 90       	pop	r0
     7ac:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     7b0:	0f 90       	pop	r0
     7b2:	1f 90       	pop	r1
     7b4:	18 95       	reti

000007b6 <__vector_16>:

ISR( TIMER0_OVF_vect )
{
     7b6:	1f 92       	push	r1
     7b8:	0f 92       	push	r0
     7ba:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     7be:	0f 92       	push	r0
     7c0:	11 24       	eor	r1, r1
     7c2:	8f 93       	push	r24
     7c4:	9f 93       	push	r25
     7c6:	cf 93       	push	r28
     7c8:	df 93       	push	r29
     7ca:	cd b7       	in	r28, 0x3d	; 61
     7cc:	de b7       	in	r29, 0x3e	; 62
	g_msCounter1++;
     7ce:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <g_msCounter1>
     7d2:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <g_msCounter1+0x1>
     7d6:	01 96       	adiw	r24, 0x01	; 1
     7d8:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <g_msCounter1+0x1>
     7dc:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <g_msCounter1>
	g_msCounter2++;
     7e0:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <g_msCounter2>
     7e4:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <g_msCounter2+0x1>
     7e8:	01 96       	adiw	r24, 0x01	; 1
     7ea:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <g_msCounter2+0x1>
     7ee:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <g_msCounter2>
	g_msCounter3++;
     7f2:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <g_msCounter3>
     7f6:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <g_msCounter3+0x1>
     7fa:	01 96       	adiw	r24, 0x01	; 1
     7fc:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <g_msCounter3+0x1>
     800:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <g_msCounter3>
	
}
     804:	00 00       	nop
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	9f 91       	pop	r25
     80c:	8f 91       	pop	r24
     80e:	0f 90       	pop	r0
     810:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     814:	0f 90       	pop	r0
     816:	1f 90       	pop	r1
     818:	18 95       	reti

0000081a <oled_command>:
}
void oled_puts(const char* s){
    while (*s) {
        oled_putc(*s++);
    }
}
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	00 d0       	rcall	.+0      	; 0x820 <oled_command+0x6>
     820:	00 d0       	rcall	.+0      	; 0x822 <oled_command+0x8>
     822:	cd b7       	in	r28, 0x3d	; 61
     824:	de b7       	in	r29, 0x3e	; 62
     826:	9b 83       	std	Y+3, r25	; 0x03
     828:	8a 83       	std	Y+2, r24	; 0x02
     82a:	6c 83       	std	Y+4, r22	; 0x04
     82c:	88 e7       	ldi	r24, 0x78	; 120
     82e:	0e 94 44 02 	call	0x488	; 0x488 <i2c_start_sla>
     832:	80 e0       	ldi	r24, 0x00	; 0
     834:	0e 94 a9 02 	call	0x552	; 0x552 <i2c_write>
     838:	19 82       	std	Y+1, r1	; 0x01
     83a:	0e c0       	rjmp	.+28     	; 0x858 <oled_command+0x3e>
     83c:	89 81       	ldd	r24, Y+1	; 0x01
     83e:	88 2f       	mov	r24, r24
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	2a 81       	ldd	r18, Y+2	; 0x02
     844:	3b 81       	ldd	r19, Y+3	; 0x03
     846:	82 0f       	add	r24, r18
     848:	93 1f       	adc	r25, r19
     84a:	fc 01       	movw	r30, r24
     84c:	80 81       	ld	r24, Z
     84e:	0e 94 a9 02 	call	0x552	; 0x552 <i2c_write>
     852:	89 81       	ldd	r24, Y+1	; 0x01
     854:	8f 5f       	subi	r24, 0xFF	; 255
     856:	89 83       	std	Y+1, r24	; 0x01
     858:	99 81       	ldd	r25, Y+1	; 0x01
     85a:	8c 81       	ldd	r24, Y+4	; 0x04
     85c:	98 17       	cp	r25, r24
     85e:	70 f3       	brcs	.-36     	; 0x83c <oled_command+0x22>
     860:	0e 94 9c 02 	call	0x538	; 0x538 <i2c_stop>
     864:	00 00       	nop
     866:	0f 90       	pop	r0
     868:	0f 90       	pop	r0
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	08 95       	ret

00000874 <oled_data>:
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	00 d0       	rcall	.+0      	; 0x87a <oled_data+0x6>
     87a:	00 d0       	rcall	.+0      	; 0x87c <oled_data+0x8>
     87c:	00 d0       	rcall	.+0      	; 0x87e <oled_data+0xa>
     87e:	cd b7       	in	r28, 0x3d	; 61
     880:	de b7       	in	r29, 0x3e	; 62
     882:	9c 83       	std	Y+4, r25	; 0x04
     884:	8b 83       	std	Y+3, r24	; 0x03
     886:	7e 83       	std	Y+6, r23	; 0x06
     888:	6d 83       	std	Y+5, r22	; 0x05
     88a:	88 e7       	ldi	r24, 0x78	; 120
     88c:	0e 94 44 02 	call	0x488	; 0x488 <i2c_start_sla>
     890:	80 e4       	ldi	r24, 0x40	; 64
     892:	0e 94 a9 02 	call	0x552	; 0x552 <i2c_write>
     896:	1a 82       	std	Y+2, r1	; 0x02
     898:	19 82       	std	Y+1, r1	; 0x01
     89a:	0f c0       	rjmp	.+30     	; 0x8ba <oled_data+0x46>
     89c:	2b 81       	ldd	r18, Y+3	; 0x03
     89e:	3c 81       	ldd	r19, Y+4	; 0x04
     8a0:	89 81       	ldd	r24, Y+1	; 0x01
     8a2:	9a 81       	ldd	r25, Y+2	; 0x02
     8a4:	82 0f       	add	r24, r18
     8a6:	93 1f       	adc	r25, r19
     8a8:	fc 01       	movw	r30, r24
     8aa:	80 81       	ld	r24, Z
     8ac:	0e 94 a9 02 	call	0x552	; 0x552 <i2c_write>
     8b0:	89 81       	ldd	r24, Y+1	; 0x01
     8b2:	9a 81       	ldd	r25, Y+2	; 0x02
     8b4:	01 96       	adiw	r24, 0x01	; 1
     8b6:	9a 83       	std	Y+2, r25	; 0x02
     8b8:	89 83       	std	Y+1, r24	; 0x01
     8ba:	29 81       	ldd	r18, Y+1	; 0x01
     8bc:	3a 81       	ldd	r19, Y+2	; 0x02
     8be:	8d 81       	ldd	r24, Y+5	; 0x05
     8c0:	9e 81       	ldd	r25, Y+6	; 0x06
     8c2:	28 17       	cp	r18, r24
     8c4:	39 07       	cpc	r19, r25
     8c6:	50 f3       	brcs	.-44     	; 0x89c <oled_data+0x28>
     8c8:	0e 94 9c 02 	call	0x538	; 0x538 <i2c_stop>
     8cc:	00 00       	nop
     8ce:	26 96       	adiw	r28, 0x06	; 6
     8d0:	0f b6       	in	r0, 0x3f	; 63
     8d2:	f8 94       	cli
     8d4:	de bf       	out	0x3e, r29	; 62
     8d6:	0f be       	out	0x3f, r0	; 63
     8d8:	cd bf       	out	0x3d, r28	; 61
     8da:	df 91       	pop	r29
     8dc:	cf 91       	pop	r28
     8de:	08 95       	ret

000008e0 <oled_init>:
     8e0:	cf 93       	push	r28
     8e2:	df 93       	push	r29
     8e4:	cd b7       	in	r28, 0x3d	; 61
     8e6:	de b7       	in	r29, 0x3e	; 62
     8e8:	a1 97       	sbiw	r28, 0x21	; 33
     8ea:	0f b6       	in	r0, 0x3f	; 63
     8ec:	f8 94       	cli
     8ee:	de bf       	out	0x3e, r29	; 62
     8f0:	0f be       	out	0x3f, r0	; 63
     8f2:	cd bf       	out	0x3d, r28	; 61
     8f4:	89 a3       	std	Y+33, r24	; 0x21
     8f6:	0e 94 2d 02 	call	0x45a	; 0x45a <i2c_init>
     8fa:	19 82       	std	Y+1, r1	; 0x01
     8fc:	1a c0       	rjmp	.+52     	; 0x932 <__stack+0x33>
     8fe:	89 81       	ldd	r24, Y+1	; 0x01
     900:	88 2f       	mov	r24, r24
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	29 81       	ldd	r18, Y+1	; 0x01
     906:	22 2f       	mov	r18, r18
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	25 57       	subi	r18, 0x75	; 117
     90c:	3c 4f       	sbci	r19, 0xFC	; 252
     90e:	3b 83       	std	Y+3, r19	; 0x03
     910:	2a 83       	std	Y+2, r18	; 0x02
     912:	2a 81       	ldd	r18, Y+2	; 0x02
     914:	3b 81       	ldd	r19, Y+3	; 0x03
     916:	f9 01       	movw	r30, r18
     918:	24 91       	lpm	r18, Z
     91a:	2c 83       	std	Y+4, r18	; 0x04
     91c:	4c 81       	ldd	r20, Y+4	; 0x04
     91e:	9e 01       	movw	r18, r28
     920:	2b 5f       	subi	r18, 0xFB	; 251
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	82 0f       	add	r24, r18
     926:	93 1f       	adc	r25, r19
     928:	fc 01       	movw	r30, r24
     92a:	40 83       	st	Z, r20
     92c:	89 81       	ldd	r24, Y+1	; 0x01
     92e:	8f 5f       	subi	r24, 0xFF	; 255
     930:	89 83       	std	Y+1, r24	; 0x01
     932:	89 81       	ldd	r24, Y+1	; 0x01
     934:	8b 31       	cpi	r24, 0x1B	; 27
     936:	18 f3       	brcs	.-58     	; 0x8fe <oled_init+0x1e>
     938:	89 a1       	ldd	r24, Y+33	; 0x21
     93a:	88 a3       	std	Y+32, r24	; 0x20
     93c:	ce 01       	movw	r24, r28
     93e:	05 96       	adiw	r24, 0x05	; 5
     940:	6c e1       	ldi	r22, 0x1C	; 28
     942:	0e 94 0d 04 	call	0x81a	; 0x81a <oled_command>
     946:	0e 94 09 05 	call	0xa12	; 0xa12 <oled_clrscr>
     94a:	00 00       	nop
     94c:	a1 96       	adiw	r28, 0x21	; 33
     94e:	0f b6       	in	r0, 0x3f	; 63
     950:	f8 94       	cli
     952:	de bf       	out	0x3e, r29	; 62
     954:	0f be       	out	0x3f, r0	; 63
     956:	cd bf       	out	0x3d, r28	; 61
     958:	df 91       	pop	r29
     95a:	cf 91       	pop	r28
     95c:	08 95       	ret

0000095e <oled_gotoxy>:
     95e:	cf 93       	push	r28
     960:	df 93       	push	r29
     962:	00 d0       	rcall	.+0      	; 0x964 <oled_gotoxy+0x6>
     964:	cd b7       	in	r28, 0x3d	; 61
     966:	de b7       	in	r29, 0x3e	; 62
     968:	89 83       	std	Y+1, r24	; 0x01
     96a:	6a 83       	std	Y+2, r22	; 0x02
     96c:	99 81       	ldd	r25, Y+1	; 0x01
     96e:	89 2f       	mov	r24, r25
     970:	88 0f       	add	r24, r24
     972:	89 0f       	add	r24, r25
     974:	88 0f       	add	r24, r24
     976:	89 83       	std	Y+1, r24	; 0x01
     978:	6a 81       	ldd	r22, Y+2	; 0x02
     97a:	89 81       	ldd	r24, Y+1	; 0x01
     97c:	0e 94 c6 04 	call	0x98c	; 0x98c <oled_goto_xpix_y>
     980:	00 00       	nop
     982:	0f 90       	pop	r0
     984:	0f 90       	pop	r0
     986:	df 91       	pop	r29
     988:	cf 91       	pop	r28
     98a:	08 95       	ret

0000098c <oled_goto_xpix_y>:
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	cd b7       	in	r28, 0x3d	; 61
     992:	de b7       	in	r29, 0x3e	; 62
     994:	27 97       	sbiw	r28, 0x07	; 7
     996:	0f b6       	in	r0, 0x3f	; 63
     998:	f8 94       	cli
     99a:	de bf       	out	0x3e, r29	; 62
     99c:	0f be       	out	0x3f, r0	; 63
     99e:	cd bf       	out	0x3d, r28	; 61
     9a0:	8e 83       	std	Y+6, r24	; 0x06
     9a2:	6f 83       	std	Y+7, r22	; 0x07
     9a4:	8e 81       	ldd	r24, Y+6	; 0x06
     9a6:	81 38       	cpi	r24, 0x81	; 129
     9a8:	50 f5       	brcc	.+84     	; 0x9fe <oled_goto_xpix_y+0x72>
     9aa:	8f 81       	ldd	r24, Y+7	; 0x07
     9ac:	88 30       	cpi	r24, 0x08	; 8
     9ae:	38 f5       	brcc	.+78     	; 0x9fe <oled_goto_xpix_y+0x72>
     9b0:	8e 81       	ldd	r24, Y+6	; 0x06
     9b2:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <cursorPosition>
     9b6:	8f 81       	ldd	r24, Y+7	; 0x07
     9b8:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <cursorPosition+0x1>
     9bc:	8f 81       	ldd	r24, Y+7	; 0x07
     9be:	80 55       	subi	r24, 0x50	; 80
     9c0:	89 83       	std	Y+1, r24	; 0x01
     9c2:	81 e2       	ldi	r24, 0x21	; 33
     9c4:	8a 83       	std	Y+2, r24	; 0x02
     9c6:	8e 81       	ldd	r24, Y+6	; 0x06
     9c8:	8e 5f       	subi	r24, 0xFE	; 254
     9ca:	8f 70       	andi	r24, 0x0F	; 15
     9cc:	8b 83       	std	Y+3, r24	; 0x03
     9ce:	8e 81       	ldd	r24, Y+6	; 0x06
     9d0:	88 2f       	mov	r24, r24
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	02 96       	adiw	r24, 0x02	; 2
     9d6:	80 7f       	andi	r24, 0xF0	; 240
     9d8:	99 27       	eor	r25, r25
     9da:	95 95       	asr	r25
     9dc:	87 95       	ror	r24
     9de:	95 95       	asr	r25
     9e0:	87 95       	ror	r24
     9e2:	95 95       	asr	r25
     9e4:	87 95       	ror	r24
     9e6:	95 95       	asr	r25
     9e8:	87 95       	ror	r24
     9ea:	80 5f       	subi	r24, 0xF0	; 240
     9ec:	8c 83       	std	Y+4, r24	; 0x04
     9ee:	8f e7       	ldi	r24, 0x7F	; 127
     9f0:	8d 83       	std	Y+5, r24	; 0x05
     9f2:	65 e0       	ldi	r22, 0x05	; 5
     9f4:	ce 01       	movw	r24, r28
     9f6:	01 96       	adiw	r24, 0x01	; 1
     9f8:	0e 94 0d 04 	call	0x81a	; 0x81a <oled_command>
     9fc:	01 c0       	rjmp	.+2      	; 0xa00 <oled_goto_xpix_y+0x74>
     9fe:	00 00       	nop
     a00:	27 96       	adiw	r28, 0x07	; 7
     a02:	0f b6       	in	r0, 0x3f	; 63
     a04:	f8 94       	cli
     a06:	de bf       	out	0x3e, r29	; 62
     a08:	0f be       	out	0x3f, r0	; 63
     a0a:	cd bf       	out	0x3d, r28	; 61
     a0c:	df 91       	pop	r29
     a0e:	cf 91       	pop	r28
     a10:	08 95       	ret

00000a12 <oled_clrscr>:
     a12:	cf 93       	push	r28
     a14:	df 93       	push	r29
     a16:	cd b7       	in	r28, 0x3d	; 61
     a18:	de b7       	in	r29, 0x3e	; 62
     a1a:	c1 58       	subi	r28, 0x81	; 129
     a1c:	d1 09       	sbc	r29, r1
     a1e:	0f b6       	in	r0, 0x3f	; 63
     a20:	f8 94       	cli
     a22:	de bf       	out	0x3e, r29	; 62
     a24:	0f be       	out	0x3f, r0	; 63
     a26:	cd bf       	out	0x3d, r28	; 61
     a28:	ce 01       	movw	r24, r28
     a2a:	02 96       	adiw	r24, 0x02	; 2
     a2c:	40 e8       	ldi	r20, 0x80	; 128
     a2e:	50 e0       	ldi	r21, 0x00	; 0
     a30:	60 e0       	ldi	r22, 0x00	; 0
     a32:	70 e0       	ldi	r23, 0x00	; 0
     a34:	0e 94 91 09 	call	0x1322	; 0x1322 <memset>
     a38:	19 82       	std	Y+1, r1	; 0x01
     a3a:	0d c0       	rjmp	.+26     	; 0xa56 <oled_clrscr+0x44>
     a3c:	69 81       	ldd	r22, Y+1	; 0x01
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	0e 94 af 04 	call	0x95e	; 0x95e <oled_gotoxy>
     a44:	ce 01       	movw	r24, r28
     a46:	02 96       	adiw	r24, 0x02	; 2
     a48:	60 e8       	ldi	r22, 0x80	; 128
     a4a:	70 e0       	ldi	r23, 0x00	; 0
     a4c:	0e 94 3a 04 	call	0x874	; 0x874 <oled_data>
     a50:	89 81       	ldd	r24, Y+1	; 0x01
     a52:	8f 5f       	subi	r24, 0xFF	; 255
     a54:	89 83       	std	Y+1, r24	; 0x01
     a56:	89 81       	ldd	r24, Y+1	; 0x01
     a58:	88 30       	cpi	r24, 0x08	; 8
     a5a:	80 f3       	brcs	.-32     	; 0xa3c <oled_clrscr+0x2a>
     a5c:	0e 94 3b 05 	call	0xa76	; 0xa76 <oled_home>
     a60:	00 00       	nop
     a62:	cf 57       	subi	r28, 0x7F	; 127
     a64:	df 4f       	sbci	r29, 0xFF	; 255
     a66:	0f b6       	in	r0, 0x3f	; 63
     a68:	f8 94       	cli
     a6a:	de bf       	out	0x3e, r29	; 62
     a6c:	0f be       	out	0x3f, r0	; 63
     a6e:	cd bf       	out	0x3d, r28	; 61
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	08 95       	ret

00000a76 <oled_home>:
     a76:	cf 93       	push	r28
     a78:	df 93       	push	r29
     a7a:	cd b7       	in	r28, 0x3d	; 61
     a7c:	de b7       	in	r29, 0x3e	; 62
     a7e:	60 e0       	ldi	r22, 0x00	; 0
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	0e 94 af 04 	call	0x95e	; 0x95e <oled_gotoxy>
     a86:	00 00       	nop
     a88:	df 91       	pop	r29
     a8a:	cf 91       	pop	r28
     a8c:	08 95       	ret

00000a8e <oled_putc>:
     a8e:	cf 93       	push	r28
     a90:	df 93       	push	r29
     a92:	cd b7       	in	r28, 0x3d	; 61
     a94:	de b7       	in	r29, 0x3e	; 62
     a96:	ee 97       	sbiw	r28, 0x3e	; 62
     a98:	0f b6       	in	r0, 0x3f	; 63
     a9a:	f8 94       	cli
     a9c:	de bf       	out	0x3e, r29	; 62
     a9e:	0f be       	out	0x3f, r0	; 63
     aa0:	cd bf       	out	0x3d, r28	; 61
     aa2:	8e af       	std	Y+62, r24	; 0x3e
     aa4:	8e ad       	ldd	r24, Y+62	; 0x3e
     aa6:	88 2f       	mov	r24, r24
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	89 30       	cpi	r24, 0x09	; 9
     aac:	91 05       	cpc	r25, r1
     aae:	51 f1       	breq	.+84     	; 0xb04 <oled_putc+0x76>
     ab0:	8a 30       	cpi	r24, 0x0A	; 10
     ab2:	91 05       	cpc	r25, r1
     ab4:	1c f4       	brge	.+6      	; 0xabc <oled_putc+0x2e>
     ab6:	08 97       	sbiw	r24, 0x08	; 8
     ab8:	49 f0       	breq	.+18     	; 0xacc <oled_putc+0x3e>
     aba:	6e c0       	rjmp	.+220    	; 0xb98 <oled_putc+0x10a>
     abc:	8a 30       	cpi	r24, 0x0A	; 10
     abe:	91 05       	cpc	r25, r1
     ac0:	09 f4       	brne	.+2      	; 0xac4 <oled_putc+0x36>
     ac2:	53 c0       	rjmp	.+166    	; 0xb6a <oled_putc+0xdc>
     ac4:	0d 97       	sbiw	r24, 0x0d	; 13
     ac6:	09 f4       	brne	.+2      	; 0xaca <oled_putc+0x3c>
     ac8:	60 c0       	rjmp	.+192    	; 0xb8a <oled_putc+0xfc>
     aca:	66 c0       	rjmp	.+204    	; 0xb98 <oled_putc+0x10a>
     acc:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <cursorPosition+0x1>
     ad0:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <cursorPosition>
     ad4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     ad8:	39 2f       	mov	r19, r25
     ada:	38 1b       	sub	r19, r24
     adc:	83 2f       	mov	r24, r19
     ade:	62 2f       	mov	r22, r18
     ae0:	0e 94 af 04 	call	0x95e	; 0x95e <oled_gotoxy>
     ae4:	80 e2       	ldi	r24, 0x20	; 32
     ae6:	0e 94 47 05 	call	0xa8e	; 0xa8e <oled_putc>
     aea:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <cursorPosition+0x1>
     aee:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <cursorPosition>
     af2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     af6:	e9 2f       	mov	r30, r25
     af8:	e8 1b       	sub	r30, r24
     afa:	8e 2f       	mov	r24, r30
     afc:	62 2f       	mov	r22, r18
     afe:	0e 94 af 04 	call	0x95e	; 0x95e <oled_gotoxy>
     b02:	7f c2       	rjmp	.+1278   	; 0x1002 <oled_putc+0x574>
     b04:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     b08:	28 2f       	mov	r18, r24
     b0a:	30 e0       	ldi	r19, 0x00	; 0
     b0c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b10:	88 2f       	mov	r24, r24
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	88 0f       	add	r24, r24
     b16:	99 1f       	adc	r25, r25
     b18:	88 0f       	add	r24, r24
     b1a:	99 1f       	adc	r25, r25
     b1c:	82 0f       	add	r24, r18
     b1e:	93 1f       	adc	r25, r19
     b20:	9c 01       	movw	r18, r24
     b22:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b26:	88 2f       	mov	r24, r24
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	88 0f       	add	r24, r24
     b2c:	99 1f       	adc	r25, r25
     b2e:	88 0f       	add	r24, r24
     b30:	99 1f       	adc	r25, r25
     b32:	ac 01       	movw	r20, r24
     b34:	85 e1       	ldi	r24, 0x15	; 21
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	84 1b       	sub	r24, r20
     b3a:	95 0b       	sbc	r25, r21
     b3c:	28 17       	cp	r18, r24
     b3e:	39 07       	cpc	r19, r25
     b40:	68 f4       	brcc	.+26     	; 0xb5c <oled_putc+0xce>
     b42:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <cursorPosition+0x1>
     b46:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <cursorPosition>
     b4a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b4e:	88 0f       	add	r24, r24
     b50:	88 0f       	add	r24, r24
     b52:	89 0f       	add	r24, r25
     b54:	62 2f       	mov	r22, r18
     b56:	0e 94 af 04 	call	0x95e	; 0x95e <oled_gotoxy>
     b5a:	53 c2       	rjmp	.+1190   	; 0x1002 <oled_putc+0x574>
     b5c:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <cursorPosition+0x1>
     b60:	68 2f       	mov	r22, r24
     b62:	85 e1       	ldi	r24, 0x15	; 21
     b64:	0e 94 af 04 	call	0x95e	; 0x95e <oled_gotoxy>
     b68:	4c c2       	rjmp	.+1176   	; 0x1002 <oled_putc+0x574>
     b6a:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <cursorPosition+0x1>
     b6e:	87 30       	cpi	r24, 0x07	; 7
     b70:	08 f0       	brcs	.+2      	; 0xb74 <oled_putc+0xe6>
     b72:	44 c2       	rjmp	.+1160   	; 0xffc <oled_putc+0x56e>
     b74:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <cursorPosition+0x1>
     b78:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b7c:	98 0f       	add	r25, r24
     b7e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     b82:	69 2f       	mov	r22, r25
     b84:	0e 94 af 04 	call	0x95e	; 0x95e <oled_gotoxy>
     b88:	39 c2       	rjmp	.+1138   	; 0xffc <oled_putc+0x56e>
     b8a:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <cursorPosition+0x1>
     b8e:	68 2f       	mov	r22, r24
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	0e 94 af 04 	call	0x95e	; 0x95e <oled_gotoxy>
     b96:	35 c2       	rjmp	.+1130   	; 0x1002 <oled_putc+0x574>
     b98:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     b9c:	8a 37       	cpi	r24, 0x7A	; 122
     b9e:	08 f0       	brcs	.+2      	; 0xba2 <oled_putc+0x114>
     ba0:	30 c2       	rjmp	.+1120   	; 0x1002 <oled_putc+0x574>
     ba2:	8e ad       	ldd	r24, Y+62	; 0x3e
     ba4:	80 32       	cpi	r24, 0x20	; 32
     ba6:	08 f4       	brcc	.+2      	; 0xbaa <oled_putc+0x11c>
     ba8:	2c c2       	rjmp	.+1112   	; 0x1002 <oled_putc+0x574>
     baa:	8e ad       	ldd	r24, Y+62	; 0x3e
     bac:	80 52       	subi	r24, 0x20	; 32
     bae:	8e af       	std	Y+62, r24	; 0x3e
     bb0:	85 ee       	ldi	r24, 0xE5	; 229
     bb2:	92 e0       	ldi	r25, 0x02	; 2
     bb4:	98 87       	std	Y+8, r25	; 0x08
     bb6:	8f 83       	std	Y+7, r24	; 0x07
     bb8:	8f 81       	ldd	r24, Y+7	; 0x07
     bba:	98 85       	ldd	r25, Y+8	; 0x08
     bbc:	fc 01       	movw	r30, r24
     bbe:	84 91       	lpm	r24, Z
     bc0:	89 87       	std	Y+9, r24	; 0x09
     bc2:	99 85       	ldd	r25, Y+9	; 0x09
     bc4:	8e ad       	ldd	r24, Y+62	; 0x3e
     bc6:	89 17       	cp	r24, r25
     bc8:	08 f4       	brcc	.+2      	; 0xbcc <oled_putc+0x13e>
     bca:	4c c0       	rjmp	.+152    	; 0xc64 <oled_putc+0x1d6>
     bcc:	8e ad       	ldd	r24, Y+62	; 0x3e
     bce:	8a 87       	std	Y+10, r24	; 0x0a
     bd0:	8f ef       	ldi	r24, 0xFF	; 255
     bd2:	8e af       	std	Y+62, r24	; 0x3e
     bd4:	19 82       	std	Y+1, r1	; 0x01
     bd6:	2f c0       	rjmp	.+94     	; 0xc36 <oled_putc+0x1a8>
     bd8:	89 81       	ldd	r24, Y+1	; 0x01
     bda:	88 2f       	mov	r24, r24
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	88 0f       	add	r24, r24
     be0:	99 1f       	adc	r25, r25
     be2:	8c 51       	subi	r24, 0x1C	; 28
     be4:	9d 4f       	sbci	r25, 0xFD	; 253
     be6:	9f 87       	std	Y+15, r25	; 0x0f
     be8:	8e 87       	std	Y+14, r24	; 0x0e
     bea:	8e 85       	ldd	r24, Y+14	; 0x0e
     bec:	9f 85       	ldd	r25, Y+15	; 0x0f
     bee:	fc 01       	movw	r30, r24
     bf0:	84 91       	lpm	r24, Z
     bf2:	88 8b       	std	Y+16, r24	; 0x10
     bf4:	88 89       	ldd	r24, Y+16	; 0x10
     bf6:	88 2f       	mov	r24, r24
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	9c 01       	movw	r18, r24
     bfc:	20 52       	subi	r18, 0x20	; 32
     bfe:	31 09       	sbc	r19, r1
     c00:	8a 85       	ldd	r24, Y+10	; 0x0a
     c02:	88 2f       	mov	r24, r24
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	28 17       	cp	r18, r24
     c08:	39 07       	cpc	r19, r25
     c0a:	91 f4       	brne	.+36     	; 0xc30 <oled_putc+0x1a2>
     c0c:	89 81       	ldd	r24, Y+1	; 0x01
     c0e:	88 2f       	mov	r24, r24
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	88 0f       	add	r24, r24
     c14:	99 1f       	adc	r25, r25
     c16:	01 96       	adiw	r24, 0x01	; 1
     c18:	8c 51       	subi	r24, 0x1C	; 28
     c1a:	9d 4f       	sbci	r25, 0xFD	; 253
     c1c:	9a 8b       	std	Y+18, r25	; 0x12
     c1e:	89 8b       	std	Y+17, r24	; 0x11
     c20:	89 89       	ldd	r24, Y+17	; 0x11
     c22:	9a 89       	ldd	r25, Y+18	; 0x12
     c24:	fc 01       	movw	r30, r24
     c26:	84 91       	lpm	r24, Z
     c28:	8b 8b       	std	Y+19, r24	; 0x13
     c2a:	8b 89       	ldd	r24, Y+19	; 0x13
     c2c:	8e af       	std	Y+62, r24	; 0x3e
     c2e:	16 c0       	rjmp	.+44     	; 0xc5c <oled_putc+0x1ce>
     c30:	89 81       	ldd	r24, Y+1	; 0x01
     c32:	8f 5f       	subi	r24, 0xFF	; 255
     c34:	89 83       	std	Y+1, r24	; 0x01
     c36:	89 81       	ldd	r24, Y+1	; 0x01
     c38:	88 2f       	mov	r24, r24
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	88 0f       	add	r24, r24
     c3e:	99 1f       	adc	r25, r25
     c40:	01 96       	adiw	r24, 0x01	; 1
     c42:	8c 51       	subi	r24, 0x1C	; 28
     c44:	9d 4f       	sbci	r25, 0xFD	; 253
     c46:	9c 87       	std	Y+12, r25	; 0x0c
     c48:	8b 87       	std	Y+11, r24	; 0x0b
     c4a:	8b 85       	ldd	r24, Y+11	; 0x0b
     c4c:	9c 85       	ldd	r25, Y+12	; 0x0c
     c4e:	fc 01       	movw	r30, r24
     c50:	84 91       	lpm	r24, Z
     c52:	8d 87       	std	Y+13, r24	; 0x0d
     c54:	8d 85       	ldd	r24, Y+13	; 0x0d
     c56:	8f 3f       	cpi	r24, 0xFF	; 255
     c58:	09 f0       	breq	.+2      	; 0xc5c <oled_putc+0x1ce>
     c5a:	be cf       	rjmp	.-132    	; 0xbd8 <oled_putc+0x14a>
     c5c:	8e ad       	ldd	r24, Y+62	; 0x3e
     c5e:	8f 3f       	cpi	r24, 0xFF	; 255
     c60:	09 f4       	brne	.+2      	; 0xc64 <oled_putc+0x1d6>
     c62:	ce c1       	rjmp	.+924    	; 0x1000 <oled_putc+0x572>
     c64:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     c68:	82 30       	cpi	r24, 0x02	; 2
     c6a:	09 f0       	breq	.+2      	; 0xc6e <oled_putc+0x1e0>
     c6c:	87 c1       	rjmp	.+782    	; 0xf7c <oled_putc+0x4ee>
     c6e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     c72:	88 2f       	mov	r24, r24
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0c 96       	adiw	r24, 0x0c	; 12
     c78:	81 38       	cpi	r24, 0x81	; 129
     c7a:	91 05       	cpc	r25, r1
     c7c:	10 f0       	brcs	.+4      	; 0xc82 <oled_putc+0x1f4>
     c7e:	00 00       	nop
     c80:	c0 c1       	rjmp	.+896    	; 0x1002 <oled_putc+0x574>
     c82:	1a 82       	std	Y+2, r1	; 0x02
     c84:	9e c0       	rjmp	.+316    	; 0xdc2 <oled_putc+0x334>
     c86:	8a 81       	ldd	r24, Y+2	; 0x02
     c88:	88 2f       	mov	r24, r24
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	88 0f       	add	r24, r24
     c8e:	99 1f       	adc	r25, r25
     c90:	9e 01       	movw	r18, r28
     c92:	2f 5f       	subi	r18, 0xFF	; 255
     c94:	3f 4f       	sbci	r19, 0xFF	; 255
     c96:	82 0f       	add	r24, r18
     c98:	93 1f       	adc	r25, r19
     c9a:	4a 96       	adiw	r24, 0x1a	; 26
     c9c:	fc 01       	movw	r30, r24
     c9e:	11 82       	std	Z+1, r1	; 0x01
     ca0:	10 82       	st	Z, r1
     ca2:	8e ad       	ldd	r24, Y+62	; 0x3e
     ca4:	28 2f       	mov	r18, r24
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	8a 81       	ldd	r24, Y+2	; 0x02
     caa:	48 2f       	mov	r20, r24
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	c9 01       	movw	r24, r18
     cb0:	88 0f       	add	r24, r24
     cb2:	99 1f       	adc	r25, r25
     cb4:	82 0f       	add	r24, r18
     cb6:	93 1f       	adc	r25, r19
     cb8:	88 0f       	add	r24, r24
     cba:	99 1f       	adc	r25, r25
     cbc:	84 0f       	add	r24, r20
     cbe:	95 1f       	adc	r25, r21
     cc0:	88 59       	subi	r24, 0x98	; 152
     cc2:	9f 4f       	sbci	r25, 0xFF	; 255
     cc4:	9d 8b       	std	Y+21, r25	; 0x15
     cc6:	8c 8b       	std	Y+20, r24	; 0x14
     cc8:	8c 89       	ldd	r24, Y+20	; 0x14
     cca:	9d 89       	ldd	r25, Y+21	; 0x15
     ccc:	fc 01       	movw	r30, r24
     cce:	84 91       	lpm	r24, Z
     cd0:	8e 8b       	std	Y+22, r24	; 0x16
     cd2:	8e 89       	ldd	r24, Y+22	; 0x16
     cd4:	8f 8b       	std	Y+23, r24	; 0x17
     cd6:	1b 82       	std	Y+3, r1	; 0x03
     cd8:	6d c0       	rjmp	.+218    	; 0xdb4 <oled_putc+0x326>
     cda:	8f 89       	ldd	r24, Y+23	; 0x17
     cdc:	88 2f       	mov	r24, r24
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	2b 81       	ldd	r18, Y+3	; 0x03
     ce2:	22 2f       	mov	r18, r18
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <oled_putc+0x25e>
     ce8:	95 95       	asr	r25
     cea:	87 95       	ror	r24
     cec:	2a 95       	dec	r18
     cee:	e2 f7       	brpl	.-8      	; 0xce8 <oled_putc+0x25a>
     cf0:	81 70       	andi	r24, 0x01	; 1
     cf2:	99 27       	eor	r25, r25
     cf4:	89 2b       	or	r24, r25
     cf6:	09 f4       	brne	.+2      	; 0xcfa <oled_putc+0x26c>
     cf8:	5a c0       	rjmp	.+180    	; 0xdae <oled_putc+0x320>
     cfa:	8a 81       	ldd	r24, Y+2	; 0x02
     cfc:	88 2f       	mov	r24, r24
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	2a 81       	ldd	r18, Y+2	; 0x02
     d02:	22 2f       	mov	r18, r18
     d04:	30 e0       	ldi	r19, 0x00	; 0
     d06:	22 0f       	add	r18, r18
     d08:	33 1f       	adc	r19, r19
     d0a:	ae 01       	movw	r20, r28
     d0c:	4f 5f       	subi	r20, 0xFF	; 255
     d0e:	5f 4f       	sbci	r21, 0xFF	; 255
     d10:	24 0f       	add	r18, r20
     d12:	35 1f       	adc	r19, r21
     d14:	26 5e       	subi	r18, 0xE6	; 230
     d16:	3f 4f       	sbci	r19, 0xFF	; 255
     d18:	f9 01       	movw	r30, r18
     d1a:	20 81       	ld	r18, Z
     d1c:	31 81       	ldd	r19, Z+1	; 0x01
     d1e:	4b 81       	ldd	r20, Y+3	; 0x03
     d20:	44 2f       	mov	r20, r20
     d22:	50 e0       	ldi	r21, 0x00	; 0
     d24:	ba 01       	movw	r22, r20
     d26:	66 0f       	add	r22, r22
     d28:	77 1f       	adc	r23, r23
     d2a:	41 e0       	ldi	r20, 0x01	; 1
     d2c:	50 e0       	ldi	r21, 0x00	; 0
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <oled_putc+0x2a6>
     d30:	44 0f       	add	r20, r20
     d32:	55 1f       	adc	r21, r21
     d34:	6a 95       	dec	r22
     d36:	e2 f7       	brpl	.-8      	; 0xd30 <oled_putc+0x2a2>
     d38:	24 2b       	or	r18, r20
     d3a:	35 2b       	or	r19, r21
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	ae 01       	movw	r20, r28
     d42:	4f 5f       	subi	r20, 0xFF	; 255
     d44:	5f 4f       	sbci	r21, 0xFF	; 255
     d46:	84 0f       	add	r24, r20
     d48:	95 1f       	adc	r25, r21
     d4a:	4a 96       	adiw	r24, 0x1a	; 26
     d4c:	fc 01       	movw	r30, r24
     d4e:	31 83       	std	Z+1, r19	; 0x01
     d50:	20 83       	st	Z, r18
     d52:	8a 81       	ldd	r24, Y+2	; 0x02
     d54:	88 2f       	mov	r24, r24
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	2a 81       	ldd	r18, Y+2	; 0x02
     d5a:	22 2f       	mov	r18, r18
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	22 0f       	add	r18, r18
     d60:	33 1f       	adc	r19, r19
     d62:	ae 01       	movw	r20, r28
     d64:	4f 5f       	subi	r20, 0xFF	; 255
     d66:	5f 4f       	sbci	r21, 0xFF	; 255
     d68:	24 0f       	add	r18, r20
     d6a:	35 1f       	adc	r19, r21
     d6c:	26 5e       	subi	r18, 0xE6	; 230
     d6e:	3f 4f       	sbci	r19, 0xFF	; 255
     d70:	f9 01       	movw	r30, r18
     d72:	20 81       	ld	r18, Z
     d74:	31 81       	ldd	r19, Z+1	; 0x01
     d76:	4b 81       	ldd	r20, Y+3	; 0x03
     d78:	44 2f       	mov	r20, r20
     d7a:	50 e0       	ldi	r21, 0x00	; 0
     d7c:	44 0f       	add	r20, r20
     d7e:	55 1f       	adc	r21, r21
     d80:	ba 01       	movw	r22, r20
     d82:	6f 5f       	subi	r22, 0xFF	; 255
     d84:	7f 4f       	sbci	r23, 0xFF	; 255
     d86:	41 e0       	ldi	r20, 0x01	; 1
     d88:	50 e0       	ldi	r21, 0x00	; 0
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <oled_putc+0x302>
     d8c:	44 0f       	add	r20, r20
     d8e:	55 1f       	adc	r21, r21
     d90:	6a 95       	dec	r22
     d92:	e2 f7       	brpl	.-8      	; 0xd8c <oled_putc+0x2fe>
     d94:	24 2b       	or	r18, r20
     d96:	35 2b       	or	r19, r21
     d98:	88 0f       	add	r24, r24
     d9a:	99 1f       	adc	r25, r25
     d9c:	ae 01       	movw	r20, r28
     d9e:	4f 5f       	subi	r20, 0xFF	; 255
     da0:	5f 4f       	sbci	r21, 0xFF	; 255
     da2:	84 0f       	add	r24, r20
     da4:	95 1f       	adc	r25, r21
     da6:	4a 96       	adiw	r24, 0x1a	; 26
     da8:	fc 01       	movw	r30, r24
     daa:	31 83       	std	Z+1, r19	; 0x01
     dac:	20 83       	st	Z, r18
     dae:	8b 81       	ldd	r24, Y+3	; 0x03
     db0:	8f 5f       	subi	r24, 0xFF	; 255
     db2:	8b 83       	std	Y+3, r24	; 0x03
     db4:	8b 81       	ldd	r24, Y+3	; 0x03
     db6:	88 30       	cpi	r24, 0x08	; 8
     db8:	08 f4       	brcc	.+2      	; 0xdbc <oled_putc+0x32e>
     dba:	8f cf       	rjmp	.-226    	; 0xcda <oled_putc+0x24c>
     dbc:	8a 81       	ldd	r24, Y+2	; 0x02
     dbe:	8f 5f       	subi	r24, 0xFF	; 255
     dc0:	8a 83       	std	Y+2, r24	; 0x02
     dc2:	8a 81       	ldd	r24, Y+2	; 0x02
     dc4:	86 30       	cpi	r24, 0x06	; 6
     dc6:	08 f4       	brcc	.+2      	; 0xdca <oled_putc+0x33c>
     dc8:	5e cf       	rjmp	.-324    	; 0xc86 <oled_putc+0x1f8>
     dca:	1c 82       	std	Y+4, r1	; 0x04
     dcc:	3c c0       	rjmp	.+120    	; 0xe46 <oled_putc+0x3b8>
     dce:	8c 81       	ldd	r24, Y+4	; 0x04
     dd0:	88 2f       	mov	r24, r24
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	88 0f       	add	r24, r24
     dd6:	99 1f       	adc	r25, r25
     dd8:	2c 81       	ldd	r18, Y+4	; 0x04
     dda:	22 2f       	mov	r18, r18
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	22 0f       	add	r18, r18
     de0:	33 1f       	adc	r19, r19
     de2:	ae 01       	movw	r20, r28
     de4:	4f 5f       	subi	r20, 0xFF	; 255
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	24 0f       	add	r18, r20
     dea:	35 1f       	adc	r19, r21
     dec:	26 5e       	subi	r18, 0xE6	; 230
     dee:	3f 4f       	sbci	r19, 0xFF	; 255
     df0:	f9 01       	movw	r30, r18
     df2:	20 81       	ld	r18, Z
     df4:	31 81       	ldd	r19, Z+1	; 0x01
     df6:	42 2f       	mov	r20, r18
     df8:	9e 01       	movw	r18, r28
     dfa:	29 5d       	subi	r18, 0xD9	; 217
     dfc:	3f 4f       	sbci	r19, 0xFF	; 255
     dfe:	82 0f       	add	r24, r18
     e00:	93 1f       	adc	r25, r19
     e02:	fc 01       	movw	r30, r24
     e04:	40 83       	st	Z, r20
     e06:	8c 81       	ldd	r24, Y+4	; 0x04
     e08:	88 2f       	mov	r24, r24
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	88 0f       	add	r24, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	01 96       	adiw	r24, 0x01	; 1
     e12:	2c 81       	ldd	r18, Y+4	; 0x04
     e14:	22 2f       	mov	r18, r18
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	22 0f       	add	r18, r18
     e1a:	33 1f       	adc	r19, r19
     e1c:	ae 01       	movw	r20, r28
     e1e:	4f 5f       	subi	r20, 0xFF	; 255
     e20:	5f 4f       	sbci	r21, 0xFF	; 255
     e22:	24 0f       	add	r18, r20
     e24:	35 1f       	adc	r19, r21
     e26:	26 5e       	subi	r18, 0xE6	; 230
     e28:	3f 4f       	sbci	r19, 0xFF	; 255
     e2a:	f9 01       	movw	r30, r18
     e2c:	20 81       	ld	r18, Z
     e2e:	31 81       	ldd	r19, Z+1	; 0x01
     e30:	42 2f       	mov	r20, r18
     e32:	9e 01       	movw	r18, r28
     e34:	29 5d       	subi	r18, 0xD9	; 217
     e36:	3f 4f       	sbci	r19, 0xFF	; 255
     e38:	82 0f       	add	r24, r18
     e3a:	93 1f       	adc	r25, r19
     e3c:	fc 01       	movw	r30, r24
     e3e:	40 83       	st	Z, r20
     e40:	8c 81       	ldd	r24, Y+4	; 0x04
     e42:	8f 5f       	subi	r24, 0xFF	; 255
     e44:	8c 83       	std	Y+4, r24	; 0x04
     e46:	8c 81       	ldd	r24, Y+4	; 0x04
     e48:	86 30       	cpi	r24, 0x06	; 6
     e4a:	08 f2       	brcs	.-126    	; 0xdce <oled_putc+0x340>
     e4c:	ce 01       	movw	r24, r28
     e4e:	87 96       	adiw	r24, 0x27	; 39
     e50:	6c e0       	ldi	r22, 0x0C	; 12
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	0e 94 3a 04 	call	0x874	; 0x874 <oled_data>
     e58:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <cursorPosition+0x1>
     e5c:	8f 54       	subi	r24, 0x4F	; 79
     e5e:	8b ab       	std	Y+51, r24	; 0x33
     e60:	81 e2       	ldi	r24, 0x21	; 33
     e62:	8c ab       	std	Y+52, r24	; 0x34
     e64:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     e68:	8e 5f       	subi	r24, 0xFE	; 254
     e6a:	8f 70       	andi	r24, 0x0F	; 15
     e6c:	8d ab       	std	Y+53, r24	; 0x35
     e6e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     e72:	88 2f       	mov	r24, r24
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	02 96       	adiw	r24, 0x02	; 2
     e78:	80 7f       	andi	r24, 0xF0	; 240
     e7a:	99 27       	eor	r25, r25
     e7c:	95 95       	asr	r25
     e7e:	87 95       	ror	r24
     e80:	95 95       	asr	r25
     e82:	87 95       	ror	r24
     e84:	95 95       	asr	r25
     e86:	87 95       	ror	r24
     e88:	95 95       	asr	r25
     e8a:	87 95       	ror	r24
     e8c:	80 5f       	subi	r24, 0xF0	; 240
     e8e:	8e ab       	std	Y+54, r24	; 0x36
     e90:	8f e7       	ldi	r24, 0x7F	; 127
     e92:	8f ab       	std	Y+55, r24	; 0x37
     e94:	ce 01       	movw	r24, r28
     e96:	c3 96       	adiw	r24, 0x33	; 51
     e98:	65 e0       	ldi	r22, 0x05	; 5
     e9a:	0e 94 0d 04 	call	0x81a	; 0x81a <oled_command>
     e9e:	1d 82       	std	Y+5, r1	; 0x05
     ea0:	40 c0       	rjmp	.+128    	; 0xf22 <oled_putc+0x494>
     ea2:	8d 81       	ldd	r24, Y+5	; 0x05
     ea4:	88 2f       	mov	r24, r24
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	88 0f       	add	r24, r24
     eaa:	99 1f       	adc	r25, r25
     eac:	2d 81       	ldd	r18, Y+5	; 0x05
     eae:	22 2f       	mov	r18, r18
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	22 0f       	add	r18, r18
     eb4:	33 1f       	adc	r19, r19
     eb6:	ae 01       	movw	r20, r28
     eb8:	4f 5f       	subi	r20, 0xFF	; 255
     eba:	5f 4f       	sbci	r21, 0xFF	; 255
     ebc:	24 0f       	add	r18, r20
     ebe:	35 1f       	adc	r19, r21
     ec0:	26 5e       	subi	r18, 0xE6	; 230
     ec2:	3f 4f       	sbci	r19, 0xFF	; 255
     ec4:	f9 01       	movw	r30, r18
     ec6:	20 81       	ld	r18, Z
     ec8:	31 81       	ldd	r19, Z+1	; 0x01
     eca:	23 2f       	mov	r18, r19
     ecc:	33 27       	eor	r19, r19
     ece:	42 2f       	mov	r20, r18
     ed0:	9e 01       	movw	r18, r28
     ed2:	29 5d       	subi	r18, 0xD9	; 217
     ed4:	3f 4f       	sbci	r19, 0xFF	; 255
     ed6:	82 0f       	add	r24, r18
     ed8:	93 1f       	adc	r25, r19
     eda:	fc 01       	movw	r30, r24
     edc:	40 83       	st	Z, r20
     ede:	8d 81       	ldd	r24, Y+5	; 0x05
     ee0:	88 2f       	mov	r24, r24
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	88 0f       	add	r24, r24
     ee6:	99 1f       	adc	r25, r25
     ee8:	01 96       	adiw	r24, 0x01	; 1
     eea:	2d 81       	ldd	r18, Y+5	; 0x05
     eec:	22 2f       	mov	r18, r18
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	22 0f       	add	r18, r18
     ef2:	33 1f       	adc	r19, r19
     ef4:	ae 01       	movw	r20, r28
     ef6:	4f 5f       	subi	r20, 0xFF	; 255
     ef8:	5f 4f       	sbci	r21, 0xFF	; 255
     efa:	24 0f       	add	r18, r20
     efc:	35 1f       	adc	r19, r21
     efe:	26 5e       	subi	r18, 0xE6	; 230
     f00:	3f 4f       	sbci	r19, 0xFF	; 255
     f02:	f9 01       	movw	r30, r18
     f04:	20 81       	ld	r18, Z
     f06:	31 81       	ldd	r19, Z+1	; 0x01
     f08:	23 2f       	mov	r18, r19
     f0a:	33 27       	eor	r19, r19
     f0c:	42 2f       	mov	r20, r18
     f0e:	9e 01       	movw	r18, r28
     f10:	29 5d       	subi	r18, 0xD9	; 217
     f12:	3f 4f       	sbci	r19, 0xFF	; 255
     f14:	82 0f       	add	r24, r18
     f16:	93 1f       	adc	r25, r19
     f18:	fc 01       	movw	r30, r24
     f1a:	40 83       	st	Z, r20
     f1c:	8d 81       	ldd	r24, Y+5	; 0x05
     f1e:	8f 5f       	subi	r24, 0xFF	; 255
     f20:	8d 83       	std	Y+5, r24	; 0x05
     f22:	8d 81       	ldd	r24, Y+5	; 0x05
     f24:	86 30       	cpi	r24, 0x06	; 6
     f26:	08 f4       	brcc	.+2      	; 0xf2a <oled_putc+0x49c>
     f28:	bc cf       	rjmp	.-136    	; 0xea2 <oled_putc+0x414>
     f2a:	ce 01       	movw	r24, r28
     f2c:	87 96       	adiw	r24, 0x27	; 39
     f2e:	6c e0       	ldi	r22, 0x0C	; 12
     f30:	70 e0       	ldi	r23, 0x00	; 0
     f32:	0e 94 3a 04 	call	0x874	; 0x874 <oled_data>
     f36:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <cursorPosition+0x1>
     f3a:	80 55       	subi	r24, 0x50	; 80
     f3c:	8b ab       	std	Y+51, r24	; 0x33
     f3e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     f42:	82 5f       	subi	r24, 0xF2	; 242
     f44:	8f 70       	andi	r24, 0x0F	; 15
     f46:	8d ab       	std	Y+53, r24	; 0x35
     f48:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     f4c:	88 2f       	mov	r24, r24
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	0e 96       	adiw	r24, 0x0e	; 14
     f52:	80 7f       	andi	r24, 0xF0	; 240
     f54:	99 27       	eor	r25, r25
     f56:	92 95       	swap	r25
     f58:	82 95       	swap	r24
     f5a:	8f 70       	andi	r24, 0x0F	; 15
     f5c:	89 27       	eor	r24, r25
     f5e:	9f 70       	andi	r25, 0x0F	; 15
     f60:	89 27       	eor	r24, r25
     f62:	80 5f       	subi	r24, 0xF0	; 240
     f64:	8e ab       	std	Y+54, r24	; 0x36
     f66:	ce 01       	movw	r24, r28
     f68:	c3 96       	adiw	r24, 0x33	; 51
     f6a:	65 e0       	ldi	r22, 0x05	; 5
     f6c:	0e 94 0d 04 	call	0x81a	; 0x81a <oled_command>
     f70:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     f74:	84 5f       	subi	r24, 0xF4	; 244
     f76:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <cursorPosition>
     f7a:	43 c0       	rjmp	.+134    	; 0x1002 <oled_putc+0x574>
     f7c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     f80:	88 2f       	mov	r24, r24
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	06 96       	adiw	r24, 0x06	; 6
     f86:	81 38       	cpi	r24, 0x81	; 129
     f88:	91 05       	cpc	r25, r1
     f8a:	10 f0       	brcs	.+4      	; 0xf90 <oled_putc+0x502>
     f8c:	00 00       	nop
     f8e:	39 c0       	rjmp	.+114    	; 0x1002 <oled_putc+0x574>
     f90:	1e 82       	std	Y+6, r1	; 0x06
     f92:	25 c0       	rjmp	.+74     	; 0xfde <oled_putc+0x550>
     f94:	8e 81       	ldd	r24, Y+6	; 0x06
     f96:	48 2f       	mov	r20, r24
     f98:	50 e0       	ldi	r21, 0x00	; 0
     f9a:	8e ad       	ldd	r24, Y+62	; 0x3e
     f9c:	28 2f       	mov	r18, r24
     f9e:	30 e0       	ldi	r19, 0x00	; 0
     fa0:	8e 81       	ldd	r24, Y+6	; 0x06
     fa2:	68 2f       	mov	r22, r24
     fa4:	70 e0       	ldi	r23, 0x00	; 0
     fa6:	c9 01       	movw	r24, r18
     fa8:	88 0f       	add	r24, r24
     faa:	99 1f       	adc	r25, r25
     fac:	82 0f       	add	r24, r18
     fae:	93 1f       	adc	r25, r19
     fb0:	88 0f       	add	r24, r24
     fb2:	99 1f       	adc	r25, r25
     fb4:	86 0f       	add	r24, r22
     fb6:	97 1f       	adc	r25, r23
     fb8:	88 59       	subi	r24, 0x98	; 152
     fba:	9f 4f       	sbci	r25, 0xFF	; 255
     fbc:	99 8f       	std	Y+25, r25	; 0x19
     fbe:	88 8f       	std	Y+24, r24	; 0x18
     fc0:	88 8d       	ldd	r24, Y+24	; 0x18
     fc2:	99 8d       	ldd	r25, Y+25	; 0x19
     fc4:	fc 01       	movw	r30, r24
     fc6:	84 91       	lpm	r24, Z
     fc8:	8a 8f       	std	Y+26, r24	; 0x1a
     fca:	2a 8d       	ldd	r18, Y+26	; 0x1a
     fcc:	ce 01       	movw	r24, r28
     fce:	c8 96       	adiw	r24, 0x38	; 56
     fd0:	84 0f       	add	r24, r20
     fd2:	95 1f       	adc	r25, r21
     fd4:	fc 01       	movw	r30, r24
     fd6:	20 83       	st	Z, r18
     fd8:	8e 81       	ldd	r24, Y+6	; 0x06
     fda:	8f 5f       	subi	r24, 0xFF	; 255
     fdc:	8e 83       	std	Y+6, r24	; 0x06
     fde:	8e 81       	ldd	r24, Y+6	; 0x06
     fe0:	86 30       	cpi	r24, 0x06	; 6
     fe2:	c0 f2       	brcs	.-80     	; 0xf94 <oled_putc+0x506>
     fe4:	ce 01       	movw	r24, r28
     fe6:	c8 96       	adiw	r24, 0x38	; 56
     fe8:	66 e0       	ldi	r22, 0x06	; 6
     fea:	70 e0       	ldi	r23, 0x00	; 0
     fec:	0e 94 3a 04 	call	0x874	; 0x874 <oled_data>
     ff0:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <cursorPosition>
     ff4:	8a 5f       	subi	r24, 0xFA	; 250
     ff6:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <cursorPosition>
     ffa:	03 c0       	rjmp	.+6      	; 0x1002 <oled_putc+0x574>
     ffc:	00 00       	nop
     ffe:	01 c0       	rjmp	.+2      	; 0x1002 <oled_putc+0x574>
    1000:	00 00       	nop
    1002:	00 00       	nop
    1004:	ee 96       	adiw	r28, 0x3e	; 62
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	f8 94       	cli
    100a:	de bf       	out	0x3e, r29	; 62
    100c:	0f be       	out	0x3f, r0	; 63
    100e:	cd bf       	out	0x3d, r28	; 61
    1010:	df 91       	pop	r29
    1012:	cf 91       	pop	r28
    1014:	08 95       	ret

00001016 <oled_puts_p>:
void oled_puts_p(const char* progmem_s){
    1016:	1f 93       	push	r17
    1018:	cf 93       	push	r28
    101a:	df 93       	push	r29
    101c:	00 d0       	rcall	.+0      	; 0x101e <oled_puts_p+0x8>
    101e:	00 d0       	rcall	.+0      	; 0x1020 <oled_puts_p+0xa>
    1020:	1f 92       	push	r1
    1022:	cd b7       	in	r28, 0x3d	; 61
    1024:	de b7       	in	r29, 0x3e	; 62
    1026:	9d 83       	std	Y+5, r25	; 0x05
    1028:	8c 83       	std	Y+4, r24	; 0x04
    register uint8_t c;
    while ((c = pgm_read_byte(progmem_s++))) {
    102a:	03 c0       	rjmp	.+6      	; 0x1032 <oled_puts_p+0x1c>
        oled_putc(c);
    102c:	81 2f       	mov	r24, r17
    102e:	0e 94 47 05 	call	0xa8e	; 0xa8e <oled_putc>
        oled_putc(*s++);
    }
}
void oled_puts_p(const char* progmem_s){
    register uint8_t c;
    while ((c = pgm_read_byte(progmem_s++))) {
    1032:	8c 81       	ldd	r24, Y+4	; 0x04
    1034:	9d 81       	ldd	r25, Y+5	; 0x05
    1036:	9c 01       	movw	r18, r24
    1038:	2f 5f       	subi	r18, 0xFF	; 255
    103a:	3f 4f       	sbci	r19, 0xFF	; 255
    103c:	3d 83       	std	Y+5, r19	; 0x05
    103e:	2c 83       	std	Y+4, r18	; 0x04
    1040:	9a 83       	std	Y+2, r25	; 0x02
    1042:	89 83       	std	Y+1, r24	; 0x01
    1044:	89 81       	ldd	r24, Y+1	; 0x01
    1046:	9a 81       	ldd	r25, Y+2	; 0x02
    1048:	fc 01       	movw	r30, r24
    104a:	84 91       	lpm	r24, Z
    104c:	8b 83       	std	Y+3, r24	; 0x03
    104e:	8b 81       	ldd	r24, Y+3	; 0x03
    1050:	18 2f       	mov	r17, r24
    1052:	11 23       	and	r17, r17
    1054:	59 f7       	brne	.-42     	; 0x102c <oled_puts_p+0x16>
        oled_putc(c);
    }
}
    1056:	00 00       	nop
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	0f 90       	pop	r0
    105e:	0f 90       	pop	r0
    1060:	0f 90       	pop	r0
    1062:	df 91       	pop	r29
    1064:	cf 91       	pop	r28
    1066:	1f 91       	pop	r17
    1068:	08 95       	ret

0000106a <__iCliRetVal>:
//Return    : Next byte in buffer.
//******************************************************************
	uint8_t uart0_peek(void)
	{
		return rx0_buffer[(rx0_Tail+1) & RX0_BUFFER_MASK];
	}
    106a:	cf 93       	push	r28
    106c:	df 93       	push	r29
    106e:	cd b7       	in	r28, 0x3d	; 61
    1070:	de b7       	in	r29, 0x3e	; 62
    1072:	f8 94       	cli
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	df 91       	pop	r29
    1078:	cf 91       	pop	r28
    107a:	08 95       	ret

0000107c <__iRestore>:
    107c:	cf 93       	push	r28
    107e:	df 93       	push	r29
    1080:	00 d0       	rcall	.+0      	; 0x1082 <__iRestore+0x6>
    1082:	cd b7       	in	r28, 0x3d	; 61
    1084:	de b7       	in	r29, 0x3e	; 62
    1086:	9a 83       	std	Y+2, r25	; 0x02
    1088:	89 83       	std	Y+1, r24	; 0x01
    108a:	8f e5       	ldi	r24, 0x5F	; 95
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	29 81       	ldd	r18, Y+1	; 0x01
    1090:	3a 81       	ldd	r19, Y+2	; 0x02
    1092:	f9 01       	movw	r30, r18
    1094:	20 81       	ld	r18, Z
    1096:	fc 01       	movw	r30, r24
    1098:	20 83       	st	Z, r18
    109a:	00 00       	nop
    109c:	0f 90       	pop	r0
    109e:	0f 90       	pop	r0
    10a0:	df 91       	pop	r29
    10a2:	cf 91       	pop	r28
    10a4:	08 95       	ret

000010a6 <uart0_putc>:
    10a6:	1f 93       	push	r17
    10a8:	cf 93       	push	r28
    10aa:	df 93       	push	r29
    10ac:	00 d0       	rcall	.+0      	; 0x10ae <uart0_putc+0x8>
    10ae:	1f 92       	push	r1
    10b0:	cd b7       	in	r28, 0x3d	; 61
    10b2:	de b7       	in	r29, 0x3e	; 62
    10b4:	8b 83       	std	Y+3, r24	; 0x03
    10b6:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <tx0_Head>
    10ba:	8f 5f       	subi	r24, 0xFF	; 255
    10bc:	18 2f       	mov	r17, r24
    10be:	1f 71       	andi	r17, 0x1F	; 31
    10c0:	00 00       	nop
    10c2:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <tx0_Tail>
    10c6:	81 17       	cp	r24, r17
    10c8:	e1 f3       	breq	.-8      	; 0x10c2 <uart0_putc+0x1c>
    10ca:	81 2f       	mov	r24, r17
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	81 5c       	subi	r24, 0xC1	; 193
    10d0:	9e 4f       	sbci	r25, 0xFE	; 254
    10d2:	2b 81       	ldd	r18, Y+3	; 0x03
    10d4:	fc 01       	movw	r30, r24
    10d6:	20 83       	st	Z, r18
    10d8:	8f e5       	ldi	r24, 0x5F	; 95
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	fc 01       	movw	r30, r24
    10de:	80 81       	ld	r24, Z
    10e0:	8a 83       	std	Y+2, r24	; 0x02
    10e2:	0e 94 35 08 	call	0x106a	; 0x106a <__iCliRetVal>
    10e6:	89 83       	std	Y+1, r24	; 0x01
    10e8:	0c c0       	rjmp	.+24     	; 0x1102 <uart0_putc+0x5c>
    10ea:	10 93 3d 01 	sts	0x013D, r17	; 0x80013d <tx0_Head>
    10ee:	81 ec       	ldi	r24, 0xC1	; 193
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	21 ec       	ldi	r18, 0xC1	; 193
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	f9 01       	movw	r30, r18
    10f8:	20 81       	ld	r18, Z
    10fa:	20 62       	ori	r18, 0x20	; 32
    10fc:	fc 01       	movw	r30, r24
    10fe:	20 83       	st	Z, r18
    1100:	19 82       	std	Y+1, r1	; 0x01
    1102:	89 81       	ldd	r24, Y+1	; 0x01
    1104:	88 23       	and	r24, r24
    1106:	89 f7       	brne	.-30     	; 0x10ea <uart0_putc+0x44>
    1108:	ce 01       	movw	r24, r28
    110a:	02 96       	adiw	r24, 0x02	; 2
    110c:	0e 94 3e 08 	call	0x107c	; 0x107c <__iRestore>
    1110:	00 00       	nop
    1112:	0f 90       	pop	r0
    1114:	0f 90       	pop	r0
    1116:	0f 90       	pop	r0
    1118:	df 91       	pop	r29
    111a:	cf 91       	pop	r28
    111c:	1f 91       	pop	r17
    111e:	08 95       	ret

00001120 <uart0_putstr>:
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	00 d0       	rcall	.+0      	; 0x1126 <uart0_putstr+0x6>
    1126:	1f 92       	push	r1
    1128:	cd b7       	in	r28, 0x3d	; 61
    112a:	de b7       	in	r29, 0x3e	; 62
    112c:	9b 83       	std	Y+3, r25	; 0x03
    112e:	8a 83       	std	Y+2, r24	; 0x02
    1130:	03 c0       	rjmp	.+6      	; 0x1138 <uart0_putstr+0x18>
    1132:	89 81       	ldd	r24, Y+1	; 0x01
    1134:	0e 94 53 08 	call	0x10a6	; 0x10a6 <uart0_putc>
    1138:	8a 81       	ldd	r24, Y+2	; 0x02
    113a:	9b 81       	ldd	r25, Y+3	; 0x03
    113c:	9c 01       	movw	r18, r24
    113e:	2f 5f       	subi	r18, 0xFF	; 255
    1140:	3f 4f       	sbci	r19, 0xFF	; 255
    1142:	3b 83       	std	Y+3, r19	; 0x03
    1144:	2a 83       	std	Y+2, r18	; 0x02
    1146:	fc 01       	movw	r30, r24
    1148:	80 81       	ld	r24, Z
    114a:	89 83       	std	Y+1, r24	; 0x01
    114c:	89 81       	ldd	r24, Y+1	; 0x01
    114e:	88 23       	and	r24, r24
    1150:	81 f7       	brne	.-32     	; 0x1132 <uart0_putstr+0x12>
    1152:	00 00       	nop
    1154:	0f 90       	pop	r0
    1156:	0f 90       	pop	r0
    1158:	0f 90       	pop	r0
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	08 95       	ret

00001160 <uart0_puts_p>:
    1160:	1f 93       	push	r17
    1162:	cf 93       	push	r28
    1164:	df 93       	push	r29
    1166:	00 d0       	rcall	.+0      	; 0x1168 <uart0_puts_p+0x8>
    1168:	cd b7       	in	r28, 0x3d	; 61
    116a:	de b7       	in	r29, 0x3e	; 62
    116c:	9a 83       	std	Y+2, r25	; 0x02
    116e:	89 83       	std	Y+1, r24	; 0x01
    1170:	03 c0       	rjmp	.+6      	; 0x1178 <uart0_puts_p+0x18>
    1172:	81 2f       	mov	r24, r17
    1174:	0e 94 53 08 	call	0x10a6	; 0x10a6 <uart0_putc>
    1178:	89 81       	ldd	r24, Y+1	; 0x01
    117a:	9a 81       	ldd	r25, Y+2	; 0x02
    117c:	9c 01       	movw	r18, r24
    117e:	2f 5f       	subi	r18, 0xFF	; 255
    1180:	3f 4f       	sbci	r19, 0xFF	; 255
    1182:	3a 83       	std	Y+2, r19	; 0x02
    1184:	29 83       	std	Y+1, r18	; 0x01
    1186:	fc 01       	movw	r30, r24
    1188:	14 91       	lpm	r17, Z
    118a:	11 23       	and	r17, r17
    118c:	91 f7       	brne	.-28     	; 0x1172 <uart0_puts_p+0x12>
    118e:	00 00       	nop
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
    1194:	df 91       	pop	r29
    1196:	cf 91       	pop	r28
    1198:	1f 91       	pop	r17
    119a:	08 95       	ret

0000119c <uart0_putuint>:
    119c:	cf 93       	push	r28
    119e:	df 93       	push	r29
    11a0:	cd b7       	in	r28, 0x3d	; 61
    11a2:	de b7       	in	r29, 0x3e	; 62
    11a4:	29 97       	sbiw	r28, 0x09	; 9
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	f8 94       	cli
    11aa:	de bf       	out	0x3e, r29	; 62
    11ac:	0f be       	out	0x3f, r0	; 63
    11ae:	cd bf       	out	0x3d, r28	; 61
    11b0:	99 87       	std	Y+9, r25	; 0x09
    11b2:	88 87       	std	Y+8, r24	; 0x08
    11b4:	88 85       	ldd	r24, Y+8	; 0x08
    11b6:	99 85       	ldd	r25, Y+9	; 0x09
    11b8:	4a e0       	ldi	r20, 0x0A	; 10
    11ba:	50 e0       	ldi	r21, 0x00	; 0
    11bc:	9e 01       	movw	r18, r28
    11be:	2f 5f       	subi	r18, 0xFF	; 255
    11c0:	3f 4f       	sbci	r19, 0xFF	; 255
    11c2:	b9 01       	movw	r22, r18
    11c4:	0e 94 98 09 	call	0x1330	; 0x1330 <utoa>
    11c8:	ce 01       	movw	r24, r28
    11ca:	01 96       	adiw	r24, 0x01	; 1
    11cc:	0e 94 90 08 	call	0x1120	; 0x1120 <uart0_putstr>
    11d0:	00 00       	nop
    11d2:	29 96       	adiw	r28, 0x09	; 9
    11d4:	0f b6       	in	r0, 0x3f	; 63
    11d6:	f8 94       	cli
    11d8:	de bf       	out	0x3e, r29	; 62
    11da:	0f be       	out	0x3f, r0	; 63
    11dc:	cd bf       	out	0x3d, r28	; 61
    11de:	df 91       	pop	r29
    11e0:	cf 91       	pop	r28
    11e2:	08 95       	ret

000011e4 <uart0_getData>:
    11e4:	1f 93       	push	r17
    11e6:	cf 93       	push	r28
    11e8:	df 93       	push	r29
    11ea:	1f 92       	push	r1
    11ec:	cd b7       	in	r28, 0x3d	; 61
    11ee:	de b7       	in	r29, 0x3e	; 62
    11f0:	10 91 3c 01 	lds	r17, 0x013C	; 0x80013c <rx0_Tail>
    11f4:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <rx0_Head>
    11f8:	18 17       	cp	r17, r24
    11fa:	19 f4       	brne	.+6      	; 0x1202 <uart0_getData+0x1e>
    11fc:	8f ef       	ldi	r24, 0xFF	; 255
    11fe:	9f ef       	ldi	r25, 0xFF	; 255
    1200:	10 c0       	rjmp	.+32     	; 0x1222 <uart0_getData+0x3e>
    1202:	81 e0       	ldi	r24, 0x01	; 1
    1204:	81 0f       	add	r24, r17
    1206:	18 2f       	mov	r17, r24
    1208:	1f 71       	andi	r17, 0x1F	; 31
    120a:	81 2f       	mov	r24, r17
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	85 5e       	subi	r24, 0xE5	; 229
    1210:	9e 4f       	sbci	r25, 0xFE	; 254
    1212:	fc 01       	movw	r30, r24
    1214:	80 81       	ld	r24, Z
    1216:	89 83       	std	Y+1, r24	; 0x01
    1218:	10 93 3c 01 	sts	0x013C, r17	; 0x80013c <rx0_Tail>
    121c:	89 81       	ldd	r24, Y+1	; 0x01
    121e:	88 2f       	mov	r24, r24
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	0f 90       	pop	r0
    1224:	df 91       	pop	r29
    1226:	cf 91       	pop	r28
    1228:	1f 91       	pop	r17
    122a:	08 95       	ret

0000122c <uart_putchar>:
#else // single USART mcu

	#ifndef NO_TX0_INTERRUPT
		
		int uart_putchar(char data, FILE *stream)
		{
    122c:	cf 93       	push	r28
    122e:	df 93       	push	r29
    1230:	00 d0       	rcall	.+0      	; 0x1232 <uart_putchar+0x6>
    1232:	1f 92       	push	r1
    1234:	cd b7       	in	r28, 0x3d	; 61
    1236:	de b7       	in	r29, 0x3e	; 62
    1238:	89 83       	std	Y+1, r24	; 0x01
    123a:	7b 83       	std	Y+3, r23	; 0x03
    123c:	6a 83       	std	Y+2, r22	; 0x02
			if (data == '\n') uart0_putc('\r');
    123e:	89 81       	ldd	r24, Y+1	; 0x01
    1240:	8a 30       	cpi	r24, 0x0A	; 10
    1242:	19 f4       	brne	.+6      	; 0x124a <uart_putchar+0x1e>
    1244:	8d e0       	ldi	r24, 0x0D	; 13
    1246:	0e 94 53 08 	call	0x10a6	; 0x10a6 <uart0_putc>
		
			uart_putc(data);
    124a:	89 81       	ldd	r24, Y+1	; 0x01
    124c:	0e 94 53 08 	call	0x10a6	; 0x10a6 <uart0_putc>
			return 0;
    1250:	80 e0       	ldi	r24, 0x00	; 0
    1252:	90 e0       	ldi	r25, 0x00	; 0
		}
    1254:	0f 90       	pop	r0
    1256:	0f 90       	pop	r0
    1258:	0f 90       	pop	r0
    125a:	df 91       	pop	r29
    125c:	cf 91       	pop	r28
    125e:	08 95       	ret

00001260 <uart_getchar>:
	#endif // NO_TX0_INTERRUPT

	#ifndef NO_RX0_INTERRUPT
		
		int uart_getchar(FILE *stream)
		{
    1260:	cf 93       	push	r28
    1262:	df 93       	push	r29
    1264:	00 d0       	rcall	.+0      	; 0x1266 <uart_getchar+0x6>
    1266:	00 d0       	rcall	.+0      	; 0x1268 <uart_getchar+0x8>
    1268:	1f 92       	push	r1
    126a:	cd b7       	in	r28, 0x3d	; 61
    126c:	de b7       	in	r29, 0x3e	; 62
    126e:	9d 83       	std	Y+5, r25	; 0x05
    1270:	8c 83       	std	Y+4, r24	; 0x04
			int16_t tmp;
			
			while ( (tmp = uart0_getData()) < 0 );
    1272:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <uart0_getData>
    1276:	9a 83       	std	Y+2, r25	; 0x02
    1278:	89 83       	std	Y+1, r24	; 0x01
    127a:	89 81       	ldd	r24, Y+1	; 0x01
    127c:	9a 81       	ldd	r25, Y+2	; 0x02
    127e:	99 23       	and	r25, r25
    1280:	c4 f3       	brlt	.-16     	; 0x1272 <uart_getchar+0x12>
		
		#ifdef RX_STDIO_GETCHAR_ECHO
			tmp = uart0_putc_((uint8_t)tmp);
    1282:	89 81       	ldd	r24, Y+1	; 0x01
    1284:	8b 83       	std	Y+3, r24	; 0x03
	
	#ifndef NO_TX0_INTERRUPT
		#ifdef USART_NO_ABI_BREAKING_PREMATURES
			void uart0_putc(char data);
			inline char uart0_putc_(char data) __attribute__ ((always_inline));
			inline char uart0_putc_(char data) { uart0_putc(data); return data; }
    1286:	8b 81       	ldd	r24, Y+3	; 0x03
    1288:	0e 94 53 08 	call	0x10a6	; 0x10a6 <uart0_putc>
    128c:	8b 81       	ldd	r24, Y+3	; 0x03
    128e:	88 2f       	mov	r24, r24
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	9a 83       	std	Y+2, r25	; 0x02
    1294:	89 83       	std	Y+1, r24	; 0x01
		#endif
		
			return (uint8_t)tmp;
    1296:	89 81       	ldd	r24, Y+1	; 0x01
    1298:	9a 81       	ldd	r25, Y+2	; 0x02
    129a:	99 27       	eor	r25, r25
		}
    129c:	0f 90       	pop	r0
    129e:	0f 90       	pop	r0
    12a0:	0f 90       	pop	r0
    12a2:	0f 90       	pop	r0
    12a4:	0f 90       	pop	r0
    12a6:	df 91       	pop	r29
    12a8:	cf 91       	pop	r28
    12aa:	08 95       	ret

000012ac <__vector_19>:

#ifndef NO_TX0_INTERRUPT

	ISR(UDRE0_INTERRUPT, ISR_NAKED)
	{
		asm volatile("\n\t"
    12ac:	0f 93       	push	r16
    12ae:	0f b7       	in	r16, 0x3f	; 63
    12b0:	ef 93       	push	r30
    12b2:	ff 93       	push	r31
    12b4:	e0 91 3b 01 	lds	r30, 0x013B	; 0x80013b <tx0_Tail>
    12b8:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <tx0_Head>
    12bc:	e3 95       	inc	r30
    12be:	ef 71       	andi	r30, 0x1F	; 31
    12c0:	ef 13       	cpse	r30, r31
    12c2:	05 c0       	rjmp	.+10     	; 0x12ce <USART0_TX_CONTINUE>
    12c4:	f0 91 c1 00 	lds	r31, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    12c8:	ff 7d       	andi	r31, 0xDF	; 223
    12ca:	f0 93 c1 00 	sts	0x00C1, r31	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>

000012ce <USART0_TX_CONTINUE>:
    12ce:	e0 93 3b 01 	sts	0x013B, r30	; 0x80013b <tx0_Tail>
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	e1 5c       	subi	r30, 0xC1	; 193
    12d6:	fe 4f       	sbci	r31, 0xFE	; 254
    12d8:	e0 81       	ld	r30, Z
    12da:	e0 93 c6 00 	sts	0x00C6, r30	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>

000012de <USART0_TX_EXIT>:
    12de:	ff 91       	pop	r31
    12e0:	ef 91       	pop	r30
    12e2:	0f bf       	out	0x3f, r16	; 63
    12e4:	0f 91       	pop	r16
    12e6:	18 95       	reti
	...

000012ea <__vector_18>:

#ifndef NO_RX0_INTERRUPT

	ISR(RX0_INTERRUPT, ISR_NAKED)
	{
		asm volatile("\n\t"
    12ea:	0f 93       	push	r16
    12ec:	0f b7       	in	r16, 0x3f	; 63
    12ee:	9f 93       	push	r25
    12f0:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    12f4:	ef 93       	push	r30
    12f6:	ff 93       	push	r31
    12f8:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <rx0_Head>
    12fc:	f0 91 3c 01 	lds	r31, 0x013C	; 0x80013c <rx0_Tail>
    1300:	e3 95       	inc	r30
    1302:	ef 71       	andi	r30, 0x1F	; 31
    1304:	fe 17       	cp	r31, r30
    1306:	31 f0       	breq	.+12     	; 0x1314 <USART0_RX_EXIT>
    1308:	e0 93 3e 01 	sts	0x013E, r30	; 0x80013e <rx0_Head>
    130c:	f0 e0       	ldi	r31, 0x00	; 0
    130e:	e5 5e       	subi	r30, 0xE5	; 229
    1310:	fe 4f       	sbci	r31, 0xFE	; 254
    1312:	90 83       	st	Z, r25

00001314 <USART0_RX_EXIT>:
    1314:	ff 91       	pop	r31
    1316:	ef 91       	pop	r30
    1318:	9f 91       	pop	r25
    131a:	0f bf       	out	0x3f, r16	; 63
    131c:	0f 91       	pop	r16
    131e:	18 95       	reti
	...

00001322 <memset>:
    1322:	dc 01       	movw	r26, r24
    1324:	01 c0       	rjmp	.+2      	; 0x1328 <memset+0x6>
    1326:	6d 93       	st	X+, r22
    1328:	41 50       	subi	r20, 0x01	; 1
    132a:	50 40       	sbci	r21, 0x00	; 0
    132c:	e0 f7       	brcc	.-8      	; 0x1326 <memset+0x4>
    132e:	08 95       	ret

00001330 <utoa>:
    1330:	45 32       	cpi	r20, 0x25	; 37
    1332:	51 05       	cpc	r21, r1
    1334:	20 f4       	brcc	.+8      	; 0x133e <utoa+0xe>
    1336:	42 30       	cpi	r20, 0x02	; 2
    1338:	10 f0       	brcs	.+4      	; 0x133e <utoa+0xe>
    133a:	0c 94 a3 09 	jmp	0x1346	; 0x1346 <__utoa_ncheck>
    133e:	fb 01       	movw	r30, r22
    1340:	10 82       	st	Z, r1
    1342:	cb 01       	movw	r24, r22
    1344:	08 95       	ret

00001346 <__utoa_ncheck>:
    1346:	bb 27       	eor	r27, r27

00001348 <__utoa_common>:
    1348:	fb 01       	movw	r30, r22
    134a:	55 27       	eor	r21, r21
    134c:	aa 27       	eor	r26, r26
    134e:	88 0f       	add	r24, r24
    1350:	99 1f       	adc	r25, r25
    1352:	aa 1f       	adc	r26, r26
    1354:	a4 17       	cp	r26, r20
    1356:	10 f0       	brcs	.+4      	; 0x135c <__utoa_common+0x14>
    1358:	a4 1b       	sub	r26, r20
    135a:	83 95       	inc	r24
    135c:	50 51       	subi	r21, 0x10	; 16
    135e:	b9 f7       	brne	.-18     	; 0x134e <__utoa_common+0x6>
    1360:	a0 5d       	subi	r26, 0xD0	; 208
    1362:	aa 33       	cpi	r26, 0x3A	; 58
    1364:	08 f0       	brcs	.+2      	; 0x1368 <__utoa_common+0x20>
    1366:	a9 5d       	subi	r26, 0xD9	; 217
    1368:	a1 93       	st	Z+, r26
    136a:	00 97       	sbiw	r24, 0x00	; 0
    136c:	79 f7       	brne	.-34     	; 0x134c <__utoa_common+0x4>
    136e:	b1 11       	cpse	r27, r1
    1370:	b1 93       	st	Z+, r27
    1372:	11 92       	st	Z+, r1
    1374:	cb 01       	movw	r24, r22
    1376:	0c 94 bd 09 	jmp	0x137a	; 0x137a <strrev>

0000137a <strrev>:
    137a:	dc 01       	movw	r26, r24
    137c:	fc 01       	movw	r30, r24
    137e:	67 2f       	mov	r22, r23
    1380:	71 91       	ld	r23, Z+
    1382:	77 23       	and	r23, r23
    1384:	e1 f7       	brne	.-8      	; 0x137e <strrev+0x4>
    1386:	32 97       	sbiw	r30, 0x02	; 2
    1388:	04 c0       	rjmp	.+8      	; 0x1392 <strrev+0x18>
    138a:	7c 91       	ld	r23, X
    138c:	6d 93       	st	X+, r22
    138e:	70 83       	st	Z, r23
    1390:	62 91       	ld	r22, -Z
    1392:	ae 17       	cp	r26, r30
    1394:	bf 07       	cpc	r27, r31
    1396:	c8 f3       	brcs	.-14     	; 0x138a <strrev+0x10>
    1398:	08 95       	ret

0000139a <_exit>:
    139a:	f8 94       	cli

0000139c <__stop_program>:
    139c:	ff cf       	rjmp	.-2      	; 0x139c <__stop_program>
